

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Sun Jun 21 18:52:44 2020

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16F685
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataCOMMON,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,delta=2
    14                           	psect	swtext1,local,class=CONST,delta=2
    15                           	psect	text764,local,class=CODE,delta=2
    16                           	psect	text765,local,class=CODE,delta=2
    17                           	psect	text766,local,class=CODE,delta=2
    18                           	psect	text767,local,class=CODE,delta=2
    19                           	psect	text768,local,class=CODE,delta=2
    20                           	psect	text769,local,class=CODE,delta=2
    21                           	psect	text770,local,class=CODE,delta=2
    22                           	psect	text771,local,class=CODE,delta=2
    23                           	psect	text772,local,class=CODE,delta=2
    24                           	psect	text773,local,class=CODE,delta=2
    25                           	psect	text774,local,class=CODE,delta=2
    26                           	psect	text775,local,class=CODE,delta=2
    27                           	psect	text776,local,class=CODE,delta=2
    28                           	psect	text777,local,class=CODE,delta=2
    29                           	psect	text778,local,class=CODE,delta=2
    30                           	psect	text779,local,class=CODE,delta=2
    31                           	psect	text780,local,class=CODE,delta=2
    32                           	psect	text781,local,class=CODE,delta=2
    33                           	psect	text782,local,class=CODE,delta=2
    34                           	psect	text783,local,class=CODE,delta=2
    35                           	psect	text784,local,class=CODE,delta=2
    36                           	psect	text785,local,class=CODE,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	psect	text786,local,class=CODE,delta=2
    39                           	psect	pa_nodes,global,class=CODE,delta=2
    40                           	dabs	1,0x11E,1
    41                           	dabs	1,0x11F,1
    42                           	dabs	1,0x119,1
    43                           	dabs	1,0x11A,1
    44                           	dabs	1,0x11B,1
    45                           	dabs	1,0x10F,1
    46                           	dabs	1,0x10E,1
    47                           	dabs	1,0x116,1
    48                           	dabs	1,0x19D,1
    49                           	dabs	1,0x19E,1
    50                           	dabs	1,0x118,1
    51                           	dabs	1,0x115,1
    52                           	dabs	1,0x11E,1
    53                           	dabs	1,0x11E,1
    54                           	dabs	1,0x11F,1
    55                           	dabs	1,0x11F,1
    56                           	dabs	1,0x11E,1
    57                           	dabs	1,0x11E,1
    58                           	dabs	1,0x11E,1
    59                           	dabs	1,0x11E,1
    60                           	dabs	1,0x11E,1
    61                           	dabs	1,0x11E,1
    62                           	dabs	1,0x11F,1
    63                           	dabs	1,0x11F,1
    64                           	dabs	1,0x119,1
    65                           	dabs	1,0x119,1
    66                           	dabs	1,0x119,1
    67                           	dabs	1,0x119,1
    68                           	dabs	1,0x119,1
    69                           	dabs	1,0x119,1
    70                           	dabs	1,0x119,1
    71                           	dabs	1,0x19E,1
    72                           	dabs	1,0x118,1
    73                           	dabs	1,0x11A,1
    74                           	dabs	1,0x11A,1
    75                           	dabs	1,0x11A,1
    76                           	dabs	1,0x11A,1
    77                           	dabs	1,0x11A,1
    78                           	dabs	1,0x11A,1
    79                           	dabs	1,0x11A,1
    80                           	dabs	1,0x19E,1
    81                           	dabs	1,0x11B,1
    82                           	dabs	1,0x118,1
    83                           	dabs	1,0x18C,1
    84                           	dabs	1,0x116,1
    85                           	dabs	1,0x116,1
    86                           	dabs	1,0x116,1
    87                           	dabs	1,0x116,1
    88                           	dabs	1,0x11B,1
    89                           	dabs	1,0x11B,1
    90                           	dabs	1,0x19E,1
    91                           	dabs	1,0x19E,1
    92                           	dabs	1,0x19E,1
    93                           	dabs	1,0x19E,1
    94                           	dabs	1,0x19D,1
    95                           	dabs	1,0x19D,1
    96                           	dabs	1,0x19D,1
    97                           	dabs	1,0x19D,1
    98                           	dabs	1,0x19D,1
    99                           	dabs	1,0x11B,1
   100                           	dabs	1,0x118,1
   101                           	dabs	1,0x118,1
   102                           	dabs	1,0x118,1
   103                           	dabs	1,0x118,1
   104                           	dabs	1,0x118,1
   105                           	dabs	1,0x118,1
   106                           	dabs	1,0x115,1
   107                           	dabs	1,0x115,1
   108                           	dabs	1,0x115,1
   109                           	dabs	1,0x115,1
   110                           	dabs	1,0x18C,1
   111                           	dabs	1,0x7E,2
   112  000A                     
   113                           	psect	idataBANK0
   114  0000                     __pidataBANK0:	
   115                           
   116                           	psect	idataCOMMON
   117  0000                     __pidataCOMMON:	
   118  011E                     _ANSEL	set	286	;_ANSEL
   119  011F                     _ANSELH	set	287	;_ANSELH
   120  0119                     _CM1CON0	set	281	;_CM1CON0
   121  011A                     _CM2CON0	set	282	;_CM2CON0
   122  011B                     _CM2CON1	set	283	;_CM2CON1
   123  010F                     _EEADRH	set	271	;_EEADRH
   124  010E                     _EEDATH	set	270	;_EEDATH
   125  0116                     _IOCB	set	278	;_IOCB
   126  019D                     _PSTRCON	set	413	;_PSTRCON
   127  019E                     _SRCON	set	414	;_SRCON
   128  0118                     _VRCON	set	280	;_VRCON
   129  0115                     _WPUB	set	277	;_WPUB
   130  08F0                     _ANS0	set	2288	;_ANS0
   131  08F1                     _ANS1	set	2289	;_ANS1
   132  08FA                     _ANS10	set	2298	;_ANS10
   133  08FB                     _ANS11	set	2299	;_ANS11
   134  08F2                     _ANS2	set	2290	;_ANS2
   135  08F3                     _ANS3	set	2291	;_ANS3
   136  08F4                     _ANS4	set	2292	;_ANS4
   137  08F5                     _ANS5	set	2293	;_ANS5
   138  08F6                     _ANS6	set	2294	;_ANS6
   139  08F7                     _ANS7	set	2295	;_ANS7
   140  08F8                     _ANS8	set	2296	;_ANS8
   141  08F9                     _ANS9	set	2297	;_ANS9
   142  08C8                     _C1CH0	set	2248	;_C1CH0
   143  08C9                     _C1CH1	set	2249	;_C1CH1
   144  08CD                     _C1OE	set	2253	;_C1OE
   145  08CF                     _C1ON	set	2255	;_C1ON
   146  08CE                     _C1OUT	set	2254	;_C1OUT
   147  08CC                     _C1POL	set	2252	;_C1POL
   148  08CA                     _C1R	set	2250	;_C1R
   149  0CF5                     _C1SEN	set	3317	;_C1SEN
   150  08C7                     _C1VREN	set	2247	;_C1VREN
   151  08D0                     _C2CH0	set	2256	;_C2CH0
   152  08D1                     _C2CH1	set	2257	;_C2CH1
   153  08D5                     _C2OE	set	2261	;_C2OE
   154  08D7                     _C2ON	set	2263	;_C2ON
   155  08D6                     _C2OUT	set	2262	;_C2OUT
   156  08D4                     _C2POL	set	2260	;_C2POL
   157  08D2                     _C2R	set	2258	;_C2R
   158  0CF4                     _C2REN	set	3316	;_C2REN
   159  08D8                     _C2SYNC	set	2264	;_C2SYNC
   160  08C6                     _C2VREN	set	2246	;_C2VREN
   161  0C67                     _EEPGD	set	3175	;_EEPGD
   162  08B4                     _IOCB4	set	2228	;_IOCB4
   163  08B5                     _IOCB5	set	2229	;_IOCB5
   164  08B6                     _IOCB6	set	2230	;_IOCB6
   165  08B7                     _IOCB7	set	2231	;_IOCB7
   166  08DF                     _MC1OUT	set	2271	;_MC1OUT
   167  08DE                     _MC2OUT	set	2270	;_MC2OUT
   168  0CF2                     _PULSR	set	3314	;_PULSR
   169  0CF3                     _PULSS	set	3315	;_PULSS
   170  0CF6                     _SR0	set	3318	;_SR0
   171  0CF7                     _SR1	set	3319	;_SR1
   172  0CE8                     _STRA	set	3304	;_STRA
   173  0CE9                     _STRB	set	3305	;_STRB
   174  0CEA                     _STRC	set	3306	;_STRC
   175  0CEB                     _STRD	set	3307	;_STRD
   176  0CEC                     _STRSYNC	set	3308	;_STRSYNC
   177  08D9                     _T1GSS	set	2265	;_T1GSS
   178  08C4                     _VP6EN	set	2244	;_VP6EN
   179  08C0                     _VR0	set	2240	;_VR0
   180  08C1                     _VR1	set	2241	;_VR1
   181  08C2                     _VR2	set	2242	;_VR2
   182  08C3                     _VR3	set	2243	;_VR3
   183  08C5                     _VRR	set	2245	;_VRR
   184  08AC                     _WPUB4	set	2220	;_WPUB4
   185  08AD                     _WPUB5	set	2221	;_WPUB5
   186  08AE                     _WPUB6	set	2222	;_WPUB6
   187  08AF                     _WPUB7	set	2223	;_WPUB7
   188  0C62                     _WREN	set	3170	;_WREN
   189  000B                     _INTCON	set	11
   190  001B                     _MSCON	set	27
   191  0015                     _P1BDTH	set	21
   192  000F                     _P1BDTL	set	15
   193  0016                     _P1CON	set	22
   194  0005                     _PORTA	set	5
   195  0007                     _PORTC	set	7
   196  0012                     _T2CON0	set	18
   197  0001                     _TMR0	set	1
   198  0013                     _TMR2H	set	19
   199  0011                     _TMR2L	set	17
   200  0018                     _WDTCON	set	24
   201  005F                     _GIE	set	95
   202  005C                     _INTE	set	92
   203  0059                     _INTF	set	89
   204  002A                     _PA2	set	42
   205  002B                     _PA3	set	43
   206  002E                     _PA6	set	46
   207  0038                     _PC0	set	56
   208  003C                     _PC4	set	60
   209  002C                     _RA4	set	44
   210  002F                     _RA7	set	47
   211  00DB                     _SLVREN	set	219
   212  00C0                     _SWDTEN	set	192
   213  005D                     _T0IE	set	93
   214  005A                     _T0IF	set	90
   215  00FB                     _T0ON	set	251
   216  0061                     _TMR2IF	set	97
   217  0092                     _TMR2ON	set	146
   218  0081                     _OPTION	set	129
   219  008F                     _OSCCON	set	143
   220  0090                     _P1OE	set	144
   221  0099                     _P1POL	set	153
   222  008E                     _PCON	set	142
   223  0092                     _PR2H	set	146
   224  0091                     _PR2L	set	145
   225  0097                     _PSINKA	set	151
   226  009F                     _PSINKC	set	159
   227  0088                     _PSRCA	set	136
   228  0094                     _PSRCC	set	148
   229  009E                     _T2CON1	set	158
   230  0085                     _TRISA	set	133
   231  0087                     _TRISC	set	135
   232  0095                     _WPUA	set	149
   233  0093                     _WPUC	set	147
   234  040E                     _INTEDG	set	1038
   235  0473                     _LVDEN	set	1139
   236  0472                     _LVDW	set	1138
   237  0486                     _P1BOE	set	1158
   238                           
   239                           	psect	cinit
   240  0177                     start_initialization:	
   241  0177  3008               	movlw	8
   242                           
   243                           ; Clear objects allocated to COMMON
   244  0178  01FA               	clrf	__pbssCOMMON& (0+127)
   245  0179  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   246                           
   247                           ; Clear objects allocated to BANK0
   248  017A  01C0               	clrf	__pbssBANK0& (0+127)
   249  017B  01C1               	clrf	(__pbssBANK0+1)& (0+127)
   250  017C  01C2               	clrf	(__pbssBANK0+2)& (0+127)
   251  017D  01C3               	clrf	(__pbssBANK0+3)& (0+127)
   252  017E  01C4               	clrf	(__pbssBANK0+4)& (0+127)
   253  017F  01C5               	clrf	(__pbssBANK0+5)& (0+127)
   254  0180  01C6               	clrf	(__pbssBANK0+6)& (0+127)
   255  0181  01C7               	clrf	(__pbssBANK0+7)& (0+127)
   256                           
   257                           ;initializer for _LED_SPEED
   258  0182  00C8               	movwf	__pdataBANK0& (0+127)
   259                           
   260                           ;initializer for _dir
   261  0183  3001               	movlw	1
   262  0184  00C9               	movwf	(__pdataBANK0+1)& (0+127)
   263                           
   264                           ;initializer for _brigtness
   265  0185  3005               	movlw	5
   266  0186  00F7               	movwf	__pdataCOMMON& (0+127)
   267  0187  3001               	movlw	1
   268  0188  01F8               	clrf	(__pdataCOMMON+1)& (0+127)
   269                           
   270                           ;initializer for _work_sta
   271  0189  00F9               	movwf	(__pdataCOMMON+2)& (0+127)
   272  018A                     end_of_initialization:	
   273                           ;End of C runtime variable initialization code
   274                           
   275  018A  0183               	clrf	3
   276  018B  280B               	ljmp	_main	;jump to C main() function
   277                           
   278                           	psect	bssCOMMON
   279  007A                     __pbssCOMMON:	
   280  007A                     _brightness:	
   281  007A                     	ds	1
   282  007B                     _keytime:	
   283  007B                     	ds	1
   284                           
   285                           	psect	dataCOMMON
   286  0077                     __pdataCOMMON:	
   287  0077                     _brigtness:	
   288  0077                     	ds	2
   289  0079                     _work_sta:	
   290  0079                     	ds	1
   291                           
   292                           	psect	bssBANK0
   293  0040                     __pbssBANK0:	
   294  0040                     _T0_seconds:	
   295  0040                     	ds	2
   296  0042                     _working_timer:	
   297  0042                     	ds	2
   298  0044                     _T0_cnt:	
   299  0044                     	ds	1
   300  0045                     _delay:	
   301  0045                     	ds	1
   302  0046                     _led_stat:	
   303  0046                     	ds	1
   304  0047                     _second_cnt:	
   305  0047                     	ds	1
   306                           
   307                           	psect	dataBANK0
   308  0048                     __pdataBANK0:	
   309  0048                     _LED_SPEED:	
   310  0048                     	ds	1
   311  0049                     _dir:	
   312  0049                     	ds	1
   313                           
   314                           	psect	cstackCOMMON
   315  0070                     __pcstackCOMMON:	
   316  0070                     ?_DEVICE_INIT:	
   317  0070                     ?_PWM1_INIT:	
   318                           ; 0 bytes @ 0x0
   319                           
   320  0070                     ?_WDT_INIT:	
   321                           ; 0 bytes @ 0x0
   322                           
   323  0070                     ?_DELAY_125US:	
   324                           ; 0 bytes @ 0x0
   325                           
   326  0070                     ?_ISR:	
   327                           ; 0 bytes @ 0x0
   328                           
   329  0070                     ??_ISR:	
   330                           ; 0 bytes @ 0x0
   331                           
   332  0070                     ?_ENABLE_INTERRUPT:	
   333                           ; 0 bytes @ 0x0
   334                           
   335  0070                     ?_DISABLE_INTERRUPT:	
   336                           ; 0 bytes @ 0x0
   337                           
   338  0070                     ?_LVD_INIT:	
   339                           ; 0 bytes @ 0x0
   340                           
   341  0070                     ?_SYS_SLEEP:	
   342                           ; 0 bytes @ 0x0
   343                           
   344  0070                     ?_led_on:	
   345                           ; 0 bytes @ 0x0
   346                           
   347  0070                     ?_led_off:	
   348                           ; 0 bytes @ 0x0
   349                           
   350  0070                     ?_led_blink:	
   351                           ; 0 bytes @ 0x0
   352                           
   353  0070                     ?_SetUvWorking:	
   354                           ; 0 bytes @ 0x0
   355                           
   356  0070                     ?_SetUvBreaking:	
   357                           ; 0 bytes @ 0x0
   358                           
   359  0070                     ?_SetUvWarning:	
   360                           ; 0 bytes @ 0x0
   361                           
   362  0070                     ?_SetUvCharging:	
   363                           ; 0 bytes @ 0x0
   364                           
   365  0070                     ?_SetUvCharged:	
   366                           ; 0 bytes @ 0x0
   367                           
   368  0070                     ?_SetUvIdle:	
   369                           ; 0 bytes @ 0x0
   370                           
   371  0070                     ?_SetUvSleep:	
   372                           ; 0 bytes @ 0x0
   373                           
   374  0070                     ?_main:	
   375                           ; 0 bytes @ 0x0
   376                           
   377  0070                     ?_GetKeyEvent:	
   378                           ; 0 bytes @ 0x0
   379                           
   380  0070                     ?_GetPwrSta:	
   381                           ; 1 bytes @ 0x0
   382                           
   383                           
   384                           ; 1 bytes @ 0x0
   385  0070                     	ds	2
   386  0072                     ??_DEVICE_INIT:	
   387  0072                     ??_PWM1_INIT:	
   388                           ; 0 bytes @ 0x2
   389                           
   390  0072                     ??_WDT_INIT:	
   391                           ; 0 bytes @ 0x2
   392                           
   393  0072                     ??_DELAY_125US:	
   394                           ; 0 bytes @ 0x2
   395                           
   396  0072                     ??_ENABLE_INTERRUPT:	
   397                           ; 0 bytes @ 0x2
   398                           
   399  0072                     ??_DISABLE_INTERRUPT:	
   400                           ; 0 bytes @ 0x2
   401                           
   402  0072                     ??_LVD_INIT:	
   403                           ; 0 bytes @ 0x2
   404                           
   405  0072                     ??_SYS_SLEEP:	
   406                           ; 0 bytes @ 0x2
   407                           
   408  0072                     ??_led_on:	
   409                           ; 0 bytes @ 0x2
   410                           
   411  0072                     ??_led_off:	
   412                           ; 0 bytes @ 0x2
   413                           
   414  0072                     ??_led_blink:	
   415                           ; 0 bytes @ 0x2
   416                           
   417  0072                     ??_SetUvWorking:	
   418                           ; 0 bytes @ 0x2
   419                           
   420  0072                     ??_SetUvBreaking:	
   421                           ; 0 bytes @ 0x2
   422                           
   423  0072                     ??_SetUvWarning:	
   424                           ; 0 bytes @ 0x2
   425                           
   426  0072                     ??_SetUvCharging:	
   427                           ; 0 bytes @ 0x2
   428                           
   429  0072                     ??_SetUvCharged:	
   430                           ; 0 bytes @ 0x2
   431                           
   432  0072                     ??_SetUvIdle:	
   433                           ; 0 bytes @ 0x2
   434                           
   435  0072                     ??_SetUvSleep:	
   436                           ; 0 bytes @ 0x2
   437                           
   438  0072                     ??_GetKeyEvent:	
   439                           ; 0 bytes @ 0x2
   440                           
   441  0072                     ??_GetPwrSta:	
   442                           ; 0 bytes @ 0x2
   443                           
   444  0072                     DELAY_125US@a:	
   445                           ; 0 bytes @ 0x2
   446                           
   447  0072                     GetKeyEvent@key_event:	
   448                           ; 1 bytes @ 0x2
   449                           
   450                           
   451                           ; 1 bytes @ 0x2
   452  0072                     	ds	1
   453  0073                     ?_DELAY_MS:	
   454  0073                     DELAY_MS@Time:	
   455                           ; 0 bytes @ 0x3
   456                           
   457                           
   458                           ; 2 bytes @ 0x3
   459  0073                     	ds	2
   460  0075                     ??_DELAY_MS:	
   461  0075                     DELAY_MS@a:	
   462                           ; 0 bytes @ 0x5
   463                           
   464                           
   465                           ; 2 bytes @ 0x5
   466  0075                     	ds	2
   467  0077                     ??_main:	
   468                           
   469                           	psect	cstackBANK0
   470  004A                     __pcstackBANK0:	
   471                           ; 0 bytes @ 0x7
   472                           
   473  004A                     main@pwr_sta:	
   474                           
   475                           ; 1 bytes @ 0x0
   476  004A                     	ds	1
   477  004B                     main@keycode:	
   478                           
   479                           ; 1 bytes @ 0x1
   480  004B                     	ds	1
   481                           
   482                           	psect	maintext
   483  000B                     __pmaintext:	
   484 ;;Data sizes: Strings 0, constant 0, data 5, bss 10, persistent 0 stack 0
   485 ;;Auto spaces:   Size  Autos    Used
   486 ;; COMMON          14      7      12
   487 ;; BANK0           48      2      12
   488 ;;
   489 ;; Pointer list with targets:
   490 ;;
   491 ;; Critical Paths under _main in COMMON
   492 ;;
   493 ;;   _main->_DELAY_MS
   494 ;;   _DELAY_MS->_DELAY_125US
   495 ;;
   496 ;; Critical Paths under _ISR in COMMON
   497 ;;
   498 ;;   None.
   499 ;;
   500 ;; Critical Paths under _main in BANK0
   501 ;;
   502 ;;   None.
   503 ;;
   504 ;; Critical Paths under _ISR in BANK0
   505 ;;
   506 ;;   None.
   507 ;;
   508 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   509 ;;
   510 ;;
   511 ;;Call Graph Tables:
   512 ;;
   513 ;; ---------------------------------------------------------------------------------
   514 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   515 ;; ---------------------------------------------------------------------------------
   516 ;; (0) _main                                                 2     2      0     656
   517 ;;                                              0 BANK0      2     2      0
   518 ;;                        _DEVICE_INIT
   519 ;;                          _PWM1_INIT
   520 ;;                   _ENABLE_INTERRUPT
   521 ;;                           _LVD_INIT
   522 ;;                          _SetUvIdle
   523 ;;                           _WDT_INIT
   524 ;;                        _GetKeyEvent
   525 ;;                          _GetPwrSta
   526 ;;                       _SetUvWarning
   527 ;;                      _SetUvCharging
   528 ;;                         _SetUvSleep
   529 ;;                       _SetUvWorking
   530 ;;                       _SetUvCharged
   531 ;;                      _SetUvBreaking
   532 ;;                           _DELAY_MS
   533 ;; ---------------------------------------------------------------------------------
   534 ;; (1) _SetUvSleep                                           0     0      0       0
   535 ;;                            _led_off
   536 ;;                          _SYS_SLEEP
   537 ;; ---------------------------------------------------------------------------------
   538 ;; (1) _SetUvIdle                                            0     0      0       0
   539 ;;                             _led_on
   540 ;; ---------------------------------------------------------------------------------
   541 ;; (1) _SetUvCharged                                         0     0      0       0
   542 ;;                             _led_on
   543 ;; ---------------------------------------------------------------------------------
   544 ;; (1) _SetUvBreaking                                        0     0      0       0
   545 ;;                             _led_on
   546 ;; ---------------------------------------------------------------------------------
   547 ;; (1) _SetUvCharging                                        0     0      0       0
   548 ;;                          _led_blink
   549 ;; ---------------------------------------------------------------------------------
   550 ;; (1) _SetUvWarning                                         0     0      0       0
   551 ;;                          _led_blink
   552 ;; ---------------------------------------------------------------------------------
   553 ;; (1) _SetUvWorking                                         0     0      0       0
   554 ;;                          _led_blink
   555 ;; ---------------------------------------------------------------------------------
   556 ;; (2) _led_off                                              0     0      0       0
   557 ;;                  _DISABLE_INTERRUPT
   558 ;; ---------------------------------------------------------------------------------
   559 ;; (2) _led_on                                               0     0      0       0
   560 ;;                  _DISABLE_INTERRUPT
   561 ;; ---------------------------------------------------------------------------------
   562 ;; (2) _SYS_SLEEP                                            0     0      0       0
   563 ;; ---------------------------------------------------------------------------------
   564 ;; (1) _DELAY_MS                                             4     2      2     139
   565 ;;                                              3 COMMON     4     2      2
   566 ;;                        _DELAY_125US
   567 ;; ---------------------------------------------------------------------------------
   568 ;; (1) _GetPwrSta                                            0     0      0       0
   569 ;; ---------------------------------------------------------------------------------
   570 ;; (1) _GetKeyEvent                                          1     1      0      40
   571 ;;                                              2 COMMON     1     1      0
   572 ;; ---------------------------------------------------------------------------------
   573 ;; (2) _led_blink                                            0     0      0       0
   574 ;; ---------------------------------------------------------------------------------
   575 ;; (1) _LVD_INIT                                             0     0      0       0
   576 ;; ---------------------------------------------------------------------------------
   577 ;; (3) _DISABLE_INTERRUPT                                    0     0      0       0
   578 ;; ---------------------------------------------------------------------------------
   579 ;; (1) _ENABLE_INTERRUPT                                     0     0      0       0
   580 ;; ---------------------------------------------------------------------------------
   581 ;; (2) _DELAY_125US                                          1     1      0      68
   582 ;;                                              2 COMMON     1     1      0
   583 ;; ---------------------------------------------------------------------------------
   584 ;; (1) _WDT_INIT                                             0     0      0       0
   585 ;; ---------------------------------------------------------------------------------
   586 ;; (1) _PWM1_INIT                                            0     0      0       0
   587 ;; ---------------------------------------------------------------------------------
   588 ;; (1) _DEVICE_INIT                                          0     0      0       0
   589 ;; ---------------------------------------------------------------------------------
   590 ;; Estimated maximum stack depth 3
   591 ;; ---------------------------------------------------------------------------------
   592 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   593 ;; ---------------------------------------------------------------------------------
   594 ;; (4) _ISR                                                  2     2      0       0
   595 ;;                                              0 COMMON     2     2      0
   596 ;; ---------------------------------------------------------------------------------
   597 ;; Estimated maximum stack depth 4
   598 ;; ---------------------------------------------------------------------------------
   599 ;; Call Graph Graphs:
   600 ;; _main (ROOT)
   601 ;;   _DEVICE_INIT
   602 ;;   _PWM1_INIT
   603 ;;   _ENABLE_INTERRUPT
   604 ;;   _LVD_INIT
   605 ;;   _SetUvIdle
   606 ;;     _led_on
   607 ;;       _DISABLE_INTERRUPT
   608 ;;   _WDT_INIT
   609 ;;   _GetKeyEvent
   610 ;;   _GetPwrSta
   611 ;;   _SetUvWarning
   612 ;;     _led_blink
   613 ;;   _SetUvCharging
   614 ;;     _led_blink
   615 ;;   _SetUvSleep
   616 ;;     _led_off
   617 ;;       _DISABLE_INTERRUPT
   618 ;;     _SYS_SLEEP
   619 ;;   _SetUvWorking
   620 ;;     _led_blink
   621 ;;   _SetUvCharged
   622 ;;     _led_on
   623 ;;       _DISABLE_INTERRUPT
   624 ;;   _SetUvBreaking
   625 ;;     _led_on
   626 ;;       _DISABLE_INTERRUPT
   627 ;;   _DELAY_MS
   628 ;;     _DELAY_125US
   629 ;;
   630 ;; _ISR (ROOT)
   631 ;;
   632 ;; Address spaces:
   633 ;;Name               Size   Autos  Total    Cost      Usage
   634 ;;SFR1                 0      0       0       2        0.0%
   635 ;;BITSFR1              0      0       0       2        0.0%
   636 ;;CODE                 0      0       0       0        0.0%
   637 ;;DATA                 0      0      1B       3        0.0%
   638 ;;ABS                  0      0      18       6        0.0%
   639 ;;NULL                 0      0       0       0        0.0%
   640 ;;STACK                0      0       3       2        0.0%
   641 ;;BANK0               30      2       C       5       25.0%
   642 ;;BITBANK0            30      0       0       4        0.0%
   643 ;;SFR0                 0      0       0       1        0.0%
   644 ;;BITSFR0              0      0       0       1        0.0%
   645 ;;COMMON               E      7       C       1       85.7%
   646 ;;BITCOMMON            E      0       0       0        0.0%
   647 ;;EEDATA             100      0       0       0        0.0%
   648                           
   649                           
   650 ;; *************** function _main *****************
   651 ;; Defined at:
   652 ;;		line 540 in file "MS86F_PWM1_HALF.C"
   653 ;; Parameters:    Size  Location     Type
   654 ;;		None
   655 ;; Auto vars:     Size  Location     Type
   656 ;;  keycode         1    1[BANK0 ] unsigned char 
   657 ;;  pwr_sta         1    0[BANK0 ] enum E1037
   658 ;; Return value:  Size  Location     Type
   659 ;;		None               void
   660 ;; Registers used:
   661 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   662 ;; Tracked objects:
   663 ;;		On entry : 17F/0
   664 ;;		On exit  : 0/0
   665 ;;		Unchanged: 0/0
   666 ;; Data sizes:     COMMON   BANK0
   667 ;;      Params:         0       0
   668 ;;      Locals:         0       2
   669 ;;      Temps:          0       0
   670 ;;      Totals:         0       2
   671 ;;Total ram usage:        2 bytes
   672 ;; Hardware stack levels required when called:    4
   673 ;; This function calls:
   674 ;;		_DEVICE_INIT
   675 ;;		_PWM1_INIT
   676 ;;		_ENABLE_INTERRUPT
   677 ;;		_LVD_INIT
   678 ;;		_SetUvIdle
   679 ;;		_WDT_INIT
   680 ;;		_GetKeyEvent
   681 ;;		_GetPwrSta
   682 ;;		_SetUvWarning
   683 ;;		_SetUvCharging
   684 ;;		_SetUvSleep
   685 ;;		_SetUvWorking
   686 ;;		_SetUvCharged
   687 ;;		_SetUvBreaking
   688 ;;		_DELAY_MS
   689 ;; This function is called by:
   690 ;;		Startup code after reset
   691 ;; This function uses a non-reentrant model
   692 ;;
   693  000B                     _main:	
   694                           
   695                           ;MS86F_PWM1_HALF.C: 542: unsigned char keycode=0;
   696                           
   697                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   698  000B  01CB               	clrf	main@keycode
   699                           
   700                           ;MS86F_PWM1_HALF.C: 544: DEVICE_INIT();
   701  000C  2143               	fcall	_DEVICE_INIT
   702                           
   703                           ;MS86F_PWM1_HALF.C: 550: }
   704                           ;MS86F_PWM1_HALF.C: 552: PWM1_INIT();
   705                           
   706                           ;MS86F_PWM1_HALF.C: 546: while(0)
   707  000D  2105               	fcall	_PWM1_INIT
   708                           
   709                           ;MS86F_PWM1_HALF.C: 554: ENABLE_INTERRUPT();
   710  000E  21DE               	fcall	_ENABLE_INTERRUPT
   711                           
   712                           ;MS86F_PWM1_HALF.C: 556: LVD_INIT();
   713  000F  222D               	fcall	_LVD_INIT
   714                           
   715                           ;MS86F_PWM1_HALF.C: 558: SetUvIdle();
   716  0010  219E               	fcall	_SetUvIdle
   717                           
   718                           ;MS86F_PWM1_HALF.C: 559: WDT_INIT();
   719  0011  21E8               	fcall	_WDT_INIT
   720  0012                     l3090:	
   721                           
   722                           ;MS86F_PWM1_HALF.C: 562: {
   723                           ;MS86F_PWM1_HALF.C: 563: keycode=GetKeyEvent();
   724  0012  2126               	fcall	_GetKeyEvent
   725  0013  00CB               	movwf	main@keycode
   726                           
   727                           ;MS86F_PWM1_HALF.C: 564: pwr_sta=GetPwrSta();
   728  0014  2204               	fcall	_GetPwrSta
   729  0015  1283               	bcf	3,5	;RP0=0, select bank0
   730  0016  00CA               	movwf	main@pwr_sta
   731                           
   732                           ;MS86F_PWM1_HALF.C: 566: if(pwr_sta==POWER_LOW)
   733  0017  3A03               	xorlw	3
   734  0018  1D03               	skipz
   735  0019  2855               	goto	l3158
   736                           
   737                           ;MS86F_PWM1_HALF.C: 567: {
   738                           ;MS86F_PWM1_HALF.C: 568: if(work_sta==STATE_WORKING || work_sta==STATE_BREAKING || keyco
      +                          de)SetUvWarning();
   739  001A  0879               	movf	_work_sta,w
   740  001B  3A02               	xorlw	2
   741  001C  1903               	skipnz
   742  001D  2825               	goto	l3102
   743  001E  0879               	movf	_work_sta,w
   744  001F  3A04               	xorlw	4
   745  0020  1903               	skipnz
   746  0021  2825               	goto	l3102
   747  0022  084B               	movf	main@keycode,w
   748  0023  1903               	btfsc	3,2
   749  0024  2860               	goto	l3160
   750  0025                     l3102:	
   751  0025  21D4               	fcall	_SetUvWarning
   752  0026  2860               	goto	l3160
   753  0027                     l3104:	
   754                           
   755                           ;MS86F_PWM1_HALF.C: 575: if(keycode==2)SetUvIdle();
   756  0027  084B               	movf	main@keycode,w
   757  0028  3A02               	xorlw	2
   758  0029  1D03               	skipz
   759  002A  282D               	goto	l3108
   760  002B  219E               	fcall	_SetUvIdle
   761  002C  2860               	goto	l3160
   762  002D                     l3108:	
   763                           
   764                           ;MS86F_PWM1_HALF.C: 576: else if(pwr_sta==POWER_CHARGING)SetUvCharging();
   765  002D  0B4A               	decfsz	main@pwr_sta,w
   766  002E  2860               	goto	l3160
   767  002F                     l3110:	
   768  002F  21FB               	fcall	_SetUvCharging
   769                           
   770                           ;MS86F_PWM1_HALF.C: 577: break;
   771  0030  2860               	goto	l3160
   772  0031                     l3112:	
   773                           
   774                           ;MS86F_PWM1_HALF.C: 579: if(keycode==2)SetUvSleep();
   775  0031  084B               	movf	main@keycode,w
   776  0032  3A02               	xorlw	2
   777  0033  1D03               	skipz
   778  0034  2837               	goto	l3116
   779  0035                     l3114:	
   780  0035  21CA               	fcall	_SetUvSleep
   781  0036  2860               	goto	l3160
   782  0037                     l3116:	
   783                           
   784                           ;MS86F_PWM1_HALF.C: 580: else if(keycode==1)SetUvWorking();
   785  0037  0B4B               	decfsz	main@keycode,w
   786  0038  282D               	goto	l3108
   787  0039                     l3118:	
   788  0039  21B4               	fcall	_SetUvWorking
   789  003A  2860               	goto	l3160
   790  003B                     l3124:	
   791                           ;MS86F_PWM1_HALF.C: 581: else if(pwr_sta==POWER_CHARGING)SetUvCharging();
   792                           
   793                           
   794                           ;MS86F_PWM1_HALF.C: 584: case STATE_BREAKING:
   795                           ;MS86F_PWM1_HALF.C: 585: if(keycode==2)SetUvSleep();
   796  003B  084B               	movf	main@keycode,w
   797  003C  3A02               	xorlw	2
   798  003D  2852               	goto	L4
   799  003E                     l3128:	
   800                           
   801                           ;MS86F_PWM1_HALF.C: 590: if(keycode==1)SetUvWorking();
   802  003E  0B4B               	decfsz	main@keycode,w
   803  003F  2841               	goto	l3132
   804  0040  2839               	goto	l3118
   805  0041                     l3132:	
   806                           
   807                           ;MS86F_PWM1_HALF.C: 591: else if(pwr_sta==POWER_FULL)SetUvCharged();
   808  0041  084A               	movf	main@pwr_sta,w
   809  0042  3A02               	xorlw	2
   810  0043  1D03               	skipz
   811  0044  2851               	goto	l3152
   812  0045  21F2               	fcall	_SetUvCharged
   813  0046  2860               	goto	l3160
   814  0047                     l3140:	
   815                           ;MS86F_PWM1_HALF.C: 592: else if(pwr_sta==POWER_NORMAL)SetUvSleep();
   816                           
   817                           
   818                           ;MS86F_PWM1_HALF.C: 595: if(keycode==1)SetUvWorking();
   819  0047  0B4B               	decfsz	main@keycode,w
   820  0048  284A               	goto	l3144
   821  0049  2839               	goto	l3118
   822  004A                     l3144:	
   823                           
   824                           ;MS86F_PWM1_HALF.C: 596: else if(keycode==2)SetUvSleep();
   825  004A  084B               	movf	main@keycode,w
   826  004B  3A02               	xorlw	2
   827  004C  1903               	btfsc	3,2
   828  004D  2835               	goto	l3114
   829                           
   830                           ;MS86F_PWM1_HALF.C: 597: else if(pwr_sta==POWER_CHARGING)SetUvCharging();
   831  004E  0B4A               	decfsz	main@pwr_sta,w
   832  004F  2851               	goto	l3152
   833  0050  282F               	goto	l3110
   834  0051                     l3152:	
   835                           
   836                           ;MS86F_PWM1_HALF.C: 598: else if(pwr_sta==POWER_NORMAL)SetUvSleep();
   837  0051  08CA               	movf	main@pwr_sta,f
   838  0052                     L4:	
   839  0052  1903               	btfsc	3,2
   840  0053  2835               	goto	l3114
   841  0054  2860               	goto	l3160
   842  0055                     l3158:	
   843  0055  0879               	movf	_work_sta,w
   844                           
   845                           ; Switch size 1, requested type "space"
   846                           ; Number of cases is 7, Range of values is 0 to 6
   847                           ; switch strategies available:
   848                           ; Name         Instructions Cycles
   849                           ; direct_byte           13     6 (fixed)
   850                           ; simple_byte           22    12 (average)
   851                           ; jumptable            260     6 (fixed)
   852                           ; rangetable            11     6 (fixed)
   853                           ; spacedrange           20     9 (fixed)
   854                           ; locatedrange           7     3 (fixed)
   855                           ;	Chosen strategy is direct_byte
   856  0056  0084               	movwf	4
   857  0057  3007               	movlw	7
   858  0058  0204               	subwf	4,w
   859  0059  1803               	skipnc
   860  005A  2860               	goto	l3160
   861  005B  3002               	movlw	high S3256
   862  005C  008A               	movwf	10
   863  005D  3014               	movlw	low S3256
   864  005E  0704               	addwf	4,w
   865  005F  0082               	movwf	2
   866  0060                     l3160:	
   867                           
   868                           ;MS86F_PWM1_HALF.C: 601: }
   869                           ;MS86F_PWM1_HALF.C: 603: if(working_timer>0)
   870  0060  1283               	bcf	3,5	;RP0=0, select bank0
   871  0061  0843               	movf	_working_timer+1,w	;volatile
   872  0062  0442               	iorwf	_working_timer,w	;volatile
   873  0063  1903               	skipnz
   874  0064  28B7               	goto	l3206
   875                           
   876                           ;MS86F_PWM1_HALF.C: 604: {
   877                           ;MS86F_PWM1_HALF.C: 605: if(working_timer!=-1)
   878  0065  0A42               	incf	_working_timer,w	;volatile
   879  0066  1903               	skipnz
   880  0067  0A43               	incf	_working_timer+1,w	;volatile
   881  0068  1903               	skipnz
   882  0069  2876               	goto	l3172
   883                           
   884                           ;MS86F_PWM1_HALF.C: 606: {
   885                           ;MS86F_PWM1_HALF.C: 607: second_cnt++;
   886  006A  0AC7               	incf	_second_cnt,f	;volatile
   887                           
   888                           ;MS86F_PWM1_HALF.C: 608: if(second_cnt>=100)
   889  006B  3064               	movlw	100
   890  006C  0247               	subwf	_second_cnt,w	;volatile
   891  006D  1C03               	skipc
   892  006E  2876               	goto	l3172
   893                           
   894                           ;MS86F_PWM1_HALF.C: 609: {
   895                           ;MS86F_PWM1_HALF.C: 610: second_cnt=0;
   896  006F  01C7               	clrf	_second_cnt	;volatile
   897                           
   898                           ;MS86F_PWM1_HALF.C: 611: working_timer--;
   899  0070  3001               	movlw	1
   900  0071  02C2               	subwf	_working_timer,f	;volatile
   901  0072  3000               	movlw	0
   902  0073  1C03               	skipc
   903  0074  03C3               	decf	_working_timer+1,f	;volatile
   904  0075  02C3               	subwf	_working_timer+1,f	;volatile
   905  0076                     l3172:	
   906                           
   907                           ;MS86F_PWM1_HALF.C: 612: }
   908                           ;MS86F_PWM1_HALF.C: 613: }
   909                           ;MS86F_PWM1_HALF.C: 614: if(working_timer==0)
   910  0076  0843               	movf	_working_timer+1,w	;volatile
   911  0077  0442               	iorwf	_working_timer,w	;volatile
   912  0078  1D03               	skipz
   913  0079  288E               	goto	l3188
   914                           
   915                           ;MS86F_PWM1_HALF.C: 615: {
   916                           ;MS86F_PWM1_HALF.C: 616: if(work_sta==STATE_WORKING)SetUvBreaking();
   917  007A  0879               	movf	_work_sta,w
   918  007B  3A02               	xorlw	2
   919  007C  1D03               	skipz
   920  007D  2880               	goto	l3178
   921  007E  21A9               	fcall	_SetUvBreaking
   922  007F  28B7               	goto	l3206
   923  0080                     l3178:	
   924                           
   925                           ;MS86F_PWM1_HALF.C: 617: else if(work_sta==STATE_BREAKING) SetUvWorking();
   926  0080  0879               	movf	_work_sta,w
   927  0081  3A04               	xorlw	4
   928  0082  1D03               	skipz
   929  0083  2886               	goto	l3182
   930  0084  21B4               	fcall	_SetUvWorking
   931  0085  28B7               	goto	l3206
   932  0086                     l3182:	
   933                           
   934                           ;MS86F_PWM1_HALF.C: 618: else if(work_sta==STATE_WARNING || work_sta==STATE_IDLE)SetUvSl
      +                          eep();
   935  0086  0879               	movf	_work_sta,w
   936  0087  3A03               	xorlw	3
   937  0088  1903               	skipnz
   938  0089  288C               	goto	l3186
   939  008A  0B79               	decfsz	_work_sta,w
   940  008B  28B7               	goto	l3206
   941  008C                     l3186:	
   942  008C  21CA               	fcall	_SetUvSleep
   943  008D  28B7               	goto	l3206
   944  008E                     l3188:	
   945                           
   946                           ;MS86F_PWM1_HALF.C: 620: else
   947                           ;MS86F_PWM1_HALF.C: 621: {
   948                           ;MS86F_PWM1_HALF.C: 622: brigtness++;
   949  008E  0AF7               	incf	_brigtness,f	;volatile
   950  008F  1903               	skipnz
   951  0090  0AF8               	incf	_brigtness+1,f	;volatile
   952                           
   953                           ;MS86F_PWM1_HALF.C: 623: if(work_sta==STATE_CHARGING)brigtness+=3;
   954  0091  0879               	movf	_work_sta,w
   955  0092  3A05               	xorlw	5
   956  0093  1D03               	skipz
   957  0094  2897               	goto	l3194
   958  0095  3003               	movlw	3
   959  0096  289C               	goto	L1
   960  0097                     l3194:	
   961                           
   962                           ;MS86F_PWM1_HALF.C: 624: else if(work_sta==STATE_WARNING)brigtness+=15;
   963  0097  0879               	movf	_work_sta,w
   964  0098  3A03               	xorlw	3
   965  0099  1D03               	skipz
   966  009A  289F               	goto	l967
   967  009B  300F               	movlw	15
   968  009C                     L1:	
   969  009C  07F7               	addwf	_brigtness,f	;volatile
   970  009D  1803               	skipnc
   971  009E  0AF8               	incf	_brigtness+1,f	;volatile
   972  009F                     l967:	
   973                           
   974                           ;MS86F_PWM1_HALF.C: 625: if(brigtness<=200)P1BDTL=(unsigned char)(200-brigtness);
   975  009F  3000               	movlw	0
   976  00A0  0278               	subwf	_brigtness+1,w	;volatile
   977  00A1  30C9               	movlw	201
   978  00A2  1903               	skipnz
   979  00A3  0277               	subwf	_brigtness,w	;volatile
   980  00A4  1803               	skipnc
   981  00A5  28A9               	goto	l3200
   982  00A6  0877               	movf	_brigtness,w	;volatile
   983  00A7  3CC8               	sublw	200
   984  00A8  28B2               	goto	L2
   985  00A9                     l3200:	
   986                           
   987                           ;MS86F_PWM1_HALF.C: 626: else if(brigtness<(200*2))P1BDTL=(unsigned char)(brigtness-200);
   988  00A9  3001               	movlw	1
   989  00AA  0278               	subwf	_brigtness+1,w	;volatile
   990  00AB  3090               	movlw	144
   991  00AC  1903               	skipnz
   992  00AD  0277               	subwf	_brigtness,w	;volatile
   993  00AE  1803               	skipnc
   994  00AF  28B4               	goto	l3204
   995  00B0  0877               	movf	_brigtness,w	;volatile
   996  00B1  3E38               	addlw	56
   997  00B2                     L2:	
   998  00B2  008F               	movwf	15	;volatile
   999  00B3  28B7               	goto	l3206
  1000  00B4                     l3204:	
  1001                           
  1002                           ;MS86F_PWM1_HALF.C: 627: else brigtness=5;
  1003  00B4  3005               	movlw	5
  1004  00B5  00F7               	movwf	_brigtness	;volatile
  1005  00B6  01F8               	clrf	_brigtness+1	;volatile
  1006  00B7                     l3206:	
  1007                           
  1008                           ;MS86F_PWM1_HALF.C: 628: }
  1009                           ;MS86F_PWM1_HALF.C: 629: }
  1010                           ;MS86F_PWM1_HALF.C: 631: DELAY_MS(10);
  1011  00B7  300A               	movlw	10
  1012  00B8  00F3               	movwf	?_DELAY_MS
  1013  00B9  01F4               	clrf	?_DELAY_MS+1
  1014  00BA  215F               	fcall	_DELAY_MS
  1015  00BB  2812               	goto	l3090
  1016  00BC                     __end_of_main:	
  1017                           
  1018                           	psect	swtext1
  1019  0214                     __pswtext1:	
  1020  0214                     S3256:	
  1021  0214  2827               	ljmp	l3104
  1022  0215  2831               	ljmp	l3112
  1023  0216  283B               	ljmp	l3124
  1024  0217  2860               	ljmp	l3160
  1025  0218  283B               	ljmp	l3124
  1026  0219  283E               	ljmp	l3128
  1027  021A  2847               	ljmp	l3140
  1028                           
  1029                           	psect	text764
  1030  01CA                     __ptext764:	
  1031 ;; =============== function _main ends ============
  1032                           
  1033                           
  1034 ;; *************** function _SetUvSleep *****************
  1035 ;; Defined at:
  1036 ;;		line 493 in file "MS86F_PWM1_HALF.C"
  1037 ;; Parameters:    Size  Location     Type
  1038 ;;		None
  1039 ;; Auto vars:     Size  Location     Type
  1040 ;;		None
  1041 ;; Return value:  Size  Location     Type
  1042 ;;		None               void
  1043 ;; Registers used:
  1044 ;;		status,2, status,0, pclath, cstack
  1045 ;; Tracked objects:
  1046 ;;		On entry : 20/0
  1047 ;;		On exit  : 0/0
  1048 ;;		Unchanged: 0/0
  1049 ;; Data sizes:     COMMON   BANK0
  1050 ;;      Params:         0       0
  1051 ;;      Locals:         0       0
  1052 ;;      Temps:          0       0
  1053 ;;      Totals:         0       0
  1054 ;;Total ram usage:        0 bytes
  1055 ;; Hardware stack levels used:    1
  1056 ;; Hardware stack levels required when called:    3
  1057 ;; This function calls:
  1058 ;;		_led_off
  1059 ;;		_SYS_SLEEP
  1060 ;; This function is called by:
  1061 ;;		_main
  1062 ;; This function uses a non-reentrant model
  1063 ;;
  1064  01CA                     _SetUvSleep:	
  1065                           
  1066                           ;MS86F_PWM1_HALF.C: 494: PA6=1;
  1067                           
  1068                           ; Regs used in _SetUvSleep: [status,2+status,0+pclath+cstack]
  1069  01CA  1705               	bsf	5,6
  1070                           
  1071                           ;MS86F_PWM1_HALF.C: 495: PA3=0;
  1072  01CB  1185               	bcf	5,3
  1073                           
  1074                           ;MS86F_PWM1_HALF.C: 496: PC4=0;
  1075  01CC  1207               	bcf	7,4
  1076                           
  1077                           ;MS86F_PWM1_HALF.C: 497: working_timer=0;
  1078  01CD  01C2               	clrf	_working_timer	;volatile
  1079  01CE  01C3               	clrf	_working_timer+1	;volatile
  1080                           
  1081                           ;MS86F_PWM1_HALF.C: 498: work_sta=STATE_SLEEPING;
  1082  01CF  01F9               	clrf	_work_sta
  1083                           
  1084                           ;MS86F_PWM1_HALF.C: 499: led_off();
  1085  01D0  221B               	fcall	_led_off
  1086                           
  1087                           ;MS86F_PWM1_HALF.C: 501: SYS_SLEEP();
  1088  01D1  218C               	fcall	_SYS_SLEEP
  1089                           
  1090                           ;MS86F_PWM1_HALF.C: 502: keytime=0;
  1091  01D2  01FB               	clrf	_keytime	;volatile
  1092  01D3  0008               	return
  1093  01D4                     __end_of_SetUvSleep:	
  1094                           
  1095                           	psect	text765
  1096  019E                     __ptext765:	
  1097 ;; =============== function _SetUvSleep ends ============
  1098                           
  1099                           
  1100 ;; *************** function _SetUvIdle *****************
  1101 ;; Defined at:
  1102 ;;		line 480 in file "MS86F_PWM1_HALF.C"
  1103 ;; Parameters:    Size  Location     Type
  1104 ;;		None
  1105 ;; Auto vars:     Size  Location     Type
  1106 ;;		None
  1107 ;; Return value:  Size  Location     Type
  1108 ;;		None               void
  1109 ;; Registers used:
  1110 ;;		wreg, status,2, status,0, pclath, cstack
  1111 ;; Tracked objects:
  1112 ;;		On entry : 0/20
  1113 ;;		On exit  : 20/0
  1114 ;;		Unchanged: FFFDF/0
  1115 ;; Data sizes:     COMMON   BANK0
  1116 ;;      Params:         0       0
  1117 ;;      Locals:         0       0
  1118 ;;      Temps:          0       0
  1119 ;;      Totals:         0       0
  1120 ;;Total ram usage:        0 bytes
  1121 ;; Hardware stack levels used:    1
  1122 ;; Hardware stack levels required when called:    3
  1123 ;; This function calls:
  1124 ;;		_led_on
  1125 ;; This function is called by:
  1126 ;;		_main
  1127 ;; This function uses a non-reentrant model
  1128 ;;
  1129  019E                     _SetUvIdle:	
  1130                           
  1131                           ;MS86F_PWM1_HALF.C: 482: PA6=1;
  1132                           
  1133                           ; Regs used in _SetUvIdle: [wreg+status,2+status,0+pclath+cstack]
  1134  019E  1283               	bcf	3,5	;RP0=0, select bank0
  1135  019F  1705               	bsf	5,6
  1136                           
  1137                           ;MS86F_PWM1_HALF.C: 483: PA3=0;
  1138  01A0  1185               	bcf	5,3
  1139                           
  1140                           ;MS86F_PWM1_HALF.C: 484: PC4=0;
  1141  01A1  1207               	bcf	7,4
  1142                           
  1143                           ;MS86F_PWM1_HALF.C: 486: second_cnt=0;
  1144  01A2  01C7               	clrf	_second_cnt	;volatile
  1145                           
  1146                           ;MS86F_PWM1_HALF.C: 487: working_timer=12;
  1147  01A3  300C               	movlw	12
  1148  01A4  00C2               	movwf	_working_timer	;volatile
  1149  01A5  01C3               	clrf	_working_timer+1	;volatile
  1150                           
  1151                           ;MS86F_PWM1_HALF.C: 489: work_sta=STATE_IDLE;
  1152  01A6  01F9               	clrf	_work_sta
  1153  01A7  0AF9               	incf	_work_sta,f
  1154                           
  1155                           ;MS86F_PWM1_HALF.C: 490: led_on();
  1156  01A8  2A21               	ljmp	l3004
  1157  01A9                     __end_of_SetUvIdle:	
  1158                           
  1159                           	psect	text766
  1160  01F2                     __ptext766:	
  1161 ;; =============== function _SetUvIdle ends ============
  1162                           
  1163                           
  1164 ;; *************** function _SetUvCharged *****************
  1165 ;; Defined at:
  1166 ;;		line 470 in file "MS86F_PWM1_HALF.C"
  1167 ;; Parameters:    Size  Location     Type
  1168 ;;		None
  1169 ;; Auto vars:     Size  Location     Type
  1170 ;;		None
  1171 ;; Return value:  Size  Location     Type
  1172 ;;		None               void
  1173 ;; Registers used:
  1174 ;;		wreg, status,2, status,0, pclath, cstack
  1175 ;; Tracked objects:
  1176 ;;		On entry : 20/0
  1177 ;;		On exit  : 20/0
  1178 ;;		Unchanged: FFFDF/0
  1179 ;; Data sizes:     COMMON   BANK0
  1180 ;;      Params:         0       0
  1181 ;;      Locals:         0       0
  1182 ;;      Temps:          0       0
  1183 ;;      Totals:         0       0
  1184 ;;Total ram usage:        0 bytes
  1185 ;; Hardware stack levels used:    1
  1186 ;; Hardware stack levels required when called:    3
  1187 ;; This function calls:
  1188 ;;		_led_on
  1189 ;; This function is called by:
  1190 ;;		_main
  1191 ;; This function uses a non-reentrant model
  1192 ;;
  1193  01F2                     _SetUvCharged:	
  1194  01F2  30FF               	movlw	255
  1195                           
  1196                           ;MS86F_PWM1_HALF.C: 472: PA6=1;
  1197                           
  1198                           ; Regs used in _SetUvCharged: [wreg+status,2+status,0+pclath+cstack]
  1199  01F3  1705               	bsf	5,6
  1200                           
  1201                           ;MS86F_PWM1_HALF.C: 473: PA3=0;
  1202  01F4  1185               	bcf	5,3
  1203                           
  1204                           ;MS86F_PWM1_HALF.C: 474: PC4=0;
  1205  01F5  1207               	bcf	7,4
  1206                           
  1207                           ;MS86F_PWM1_HALF.C: 475: working_timer=-1;
  1208  01F6  00C2               	movwf	_working_timer
  1209  01F7  00C3               	movwf	_working_timer+1
  1210                           
  1211                           ;MS86F_PWM1_HALF.C: 476: work_sta=STATE_CHARGED;
  1212  01F8  3006               	movlw	6
  1213  01F9  00F9               	movwf	_work_sta
  1214                           
  1215                           ;MS86F_PWM1_HALF.C: 477: led_on();
  1216  01FA  2A21               	ljmp	l3004
  1217  01FB                     __end_of_SetUvCharged:	
  1218                           
  1219                           	psect	text767
  1220  01A9                     __ptext767:	
  1221 ;; =============== function _SetUvCharged ends ============
  1222                           
  1223                           
  1224 ;; *************** function _SetUvBreaking *****************
  1225 ;; Defined at:
  1226 ;;		line 435 in file "MS86F_PWM1_HALF.C"
  1227 ;; Parameters:    Size  Location     Type
  1228 ;;		None
  1229 ;; Auto vars:     Size  Location     Type
  1230 ;;		None
  1231 ;; Return value:  Size  Location     Type
  1232 ;;		None               void
  1233 ;; Registers used:
  1234 ;;		wreg, status,2, status,0, pclath, cstack
  1235 ;; Tracked objects:
  1236 ;;		On entry : 20/0
  1237 ;;		On exit  : 20/0
  1238 ;;		Unchanged: FFFDF/0
  1239 ;; Data sizes:     COMMON   BANK0
  1240 ;;      Params:         0       0
  1241 ;;      Locals:         0       0
  1242 ;;      Temps:          0       0
  1243 ;;      Totals:         0       0
  1244 ;;Total ram usage:        0 bytes
  1245 ;; Hardware stack levels used:    1
  1246 ;; Hardware stack levels required when called:    3
  1247 ;; This function calls:
  1248 ;;		_led_on
  1249 ;; This function is called by:
  1250 ;;		_main
  1251 ;; This function uses a non-reentrant model
  1252 ;;
  1253  01A9                     _SetUvBreaking:	
  1254                           
  1255                           ;MS86F_PWM1_HALF.C: 436: PA6=1;
  1256                           
  1257                           ; Regs used in _SetUvBreaking: [wreg+status,2+status,0+pclath+cstack]
  1258  01A9  1705               	bsf	5,6
  1259                           
  1260                           ;MS86F_PWM1_HALF.C: 437: PA3=0;
  1261  01AA  1185               	bcf	5,3
  1262                           
  1263                           ;MS86F_PWM1_HALF.C: 438: PC4=0;
  1264  01AB  1207               	bcf	7,4
  1265                           
  1266                           ;MS86F_PWM1_HALF.C: 441: second_cnt=0;
  1267  01AC  01C7               	clrf	_second_cnt	;volatile
  1268                           
  1269                           ;MS86F_PWM1_HALF.C: 442: working_timer=10*59;
  1270  01AD  304E               	movlw	78
  1271  01AE  00C2               	movwf	_working_timer
  1272  01AF  3002               	movlw	2
  1273  01B0  00C3               	movwf	_working_timer+1
  1274                           
  1275                           ;MS86F_PWM1_HALF.C: 444: work_sta=STATE_BREAKING;
  1276  01B1  3004               	movlw	4
  1277  01B2  00F9               	movwf	_work_sta
  1278                           
  1279                           ;MS86F_PWM1_HALF.C: 445: led_on();
  1280  01B3  2A21               	ljmp	l3004
  1281  01B4                     __end_of_SetUvBreaking:	
  1282                           
  1283                           	psect	text768
  1284  01FB                     __ptext768:	
  1285 ;; =============== function _SetUvBreaking ends ============
  1286                           
  1287                           
  1288 ;; *************** function _SetUvCharging *****************
  1289 ;; Defined at:
  1290 ;;		line 461 in file "MS86F_PWM1_HALF.C"
  1291 ;; Parameters:    Size  Location     Type
  1292 ;;		None
  1293 ;; Auto vars:     Size  Location     Type
  1294 ;;		None
  1295 ;; Return value:  Size  Location     Type
  1296 ;;		None               void
  1297 ;; Registers used:
  1298 ;;		wreg, status,2, status,0, pclath, cstack
  1299 ;; Tracked objects:
  1300 ;;		On entry : 20/0
  1301 ;;		On exit  : 20/20
  1302 ;;		Unchanged: FFFDF/0
  1303 ;; Data sizes:     COMMON   BANK0
  1304 ;;      Params:         0       0
  1305 ;;      Locals:         0       0
  1306 ;;      Temps:          0       0
  1307 ;;      Totals:         0       0
  1308 ;;Total ram usage:        0 bytes
  1309 ;; Hardware stack levels used:    1
  1310 ;; Hardware stack levels required when called:    2
  1311 ;; This function calls:
  1312 ;;		_led_blink
  1313 ;; This function is called by:
  1314 ;;		_main
  1315 ;; This function uses a non-reentrant model
  1316 ;;
  1317  01FB                     _SetUvCharging:	
  1318  01FB  3005               	movlw	5
  1319                           
  1320                           ;MS86F_PWM1_HALF.C: 462: PA6=1;
  1321                           
  1322                           ; Regs used in _SetUvCharging: [wreg+status,2+status,0+pclath+cstack]
  1323  01FC  1705               	bsf	5,6
  1324                           
  1325                           ;MS86F_PWM1_HALF.C: 463: PA3=0;
  1326  01FD  1185               	bcf	5,3
  1327                           
  1328                           ;MS86F_PWM1_HALF.C: 464: PC4=0;
  1329  01FE  1207               	bcf	7,4
  1330                           
  1331                           ;MS86F_PWM1_HALF.C: 465: work_sta=STATE_CHARGING;
  1332  01FF  00F9               	movwf	_work_sta
  1333                           
  1334                           ;MS86F_PWM1_HALF.C: 466: working_timer=-1;
  1335  0200  30FF               	movlw	255
  1336  0201  00C2               	movwf	_working_timer
  1337  0202  00C3               	movwf	_working_timer+1
  1338                           
  1339                           ;MS86F_PWM1_HALF.C: 467: led_blink();
  1340  0203  29BF               	ljmp	l2936
  1341  0204                     __end_of_SetUvCharging:	
  1342                           
  1343                           	psect	text769
  1344  01D4                     __ptext769:	
  1345 ;; =============== function _SetUvCharging ends ============
  1346                           
  1347                           
  1348 ;; *************** function _SetUvWarning *****************
  1349 ;; Defined at:
  1350 ;;		line 448 in file "MS86F_PWM1_HALF.C"
  1351 ;; Parameters:    Size  Location     Type
  1352 ;;		None
  1353 ;; Auto vars:     Size  Location     Type
  1354 ;;		None
  1355 ;; Return value:  Size  Location     Type
  1356 ;;		None               void
  1357 ;; Registers used:
  1358 ;;		wreg, status,2, status,0, pclath, cstack
  1359 ;; Tracked objects:
  1360 ;;		On entry : 20/0
  1361 ;;		On exit  : 20/20
  1362 ;;		Unchanged: FFFDF/0
  1363 ;; Data sizes:     COMMON   BANK0
  1364 ;;      Params:         0       0
  1365 ;;      Locals:         0       0
  1366 ;;      Temps:          0       0
  1367 ;;      Totals:         0       0
  1368 ;;Total ram usage:        0 bytes
  1369 ;; Hardware stack levels used:    1
  1370 ;; Hardware stack levels required when called:    2
  1371 ;; This function calls:
  1372 ;;		_led_blink
  1373 ;; This function is called by:
  1374 ;;		_main
  1375 ;; This function uses a non-reentrant model
  1376 ;;
  1377  01D4                     _SetUvWarning:	
  1378                           
  1379                           ;MS86F_PWM1_HALF.C: 449: PA6=1;
  1380                           
  1381                           ; Regs used in _SetUvWarning: [wreg+status,2+status,0+pclath+cstack]
  1382  01D4  1705               	bsf	5,6
  1383                           
  1384                           ;MS86F_PWM1_HALF.C: 450: PA3=0;
  1385  01D5  1185               	bcf	5,3
  1386                           
  1387                           ;MS86F_PWM1_HALF.C: 451: PC4=0;
  1388  01D6  1207               	bcf	7,4
  1389                           
  1390                           ;MS86F_PWM1_HALF.C: 454: second_cnt=0;
  1391  01D7  01C7               	clrf	_second_cnt	;volatile
  1392                           
  1393                           ;MS86F_PWM1_HALF.C: 455: working_timer=2;
  1394  01D8  3002               	movlw	2
  1395  01D9  00C2               	movwf	_working_timer	;volatile
  1396  01DA  01C3               	clrf	_working_timer+1	;volatile
  1397                           
  1398                           ;MS86F_PWM1_HALF.C: 457: work_sta=STATE_WARNING;
  1399  01DB  3003               	movlw	3
  1400  01DC  00F9               	movwf	_work_sta
  1401                           
  1402                           ;MS86F_PWM1_HALF.C: 458: led_blink();
  1403  01DD  29BF               	ljmp	l2936
  1404  01DE                     __end_of_SetUvWarning:	
  1405                           
  1406                           	psect	text770
  1407  01B4                     __ptext770:	
  1408 ;; =============== function _SetUvWarning ends ============
  1409                           
  1410                           
  1411 ;; *************** function _SetUvWorking *****************
  1412 ;; Defined at:
  1413 ;;		line 422 in file "MS86F_PWM1_HALF.C"
  1414 ;; Parameters:    Size  Location     Type
  1415 ;;		None
  1416 ;; Auto vars:     Size  Location     Type
  1417 ;;		None
  1418 ;; Return value:  Size  Location     Type
  1419 ;;		None               void
  1420 ;; Registers used:
  1421 ;;		wreg, status,2, status,0, pclath, cstack
  1422 ;; Tracked objects:
  1423 ;;		On entry : 20/0
  1424 ;;		On exit  : 20/20
  1425 ;;		Unchanged: FFFDF/0
  1426 ;; Data sizes:     COMMON   BANK0
  1427 ;;      Params:         0       0
  1428 ;;      Locals:         0       0
  1429 ;;      Temps:          0       0
  1430 ;;      Totals:         0       0
  1431 ;;Total ram usage:        0 bytes
  1432 ;; Hardware stack levels used:    1
  1433 ;; Hardware stack levels required when called:    2
  1434 ;; This function calls:
  1435 ;;		_led_blink
  1436 ;; This function is called by:
  1437 ;;		_main
  1438 ;; This function uses a non-reentrant model
  1439 ;;
  1440  01B4                     _SetUvWorking:	
  1441                           
  1442                           ;MS86F_PWM1_HALF.C: 424: PA6=0;
  1443                           
  1444                           ; Regs used in _SetUvWorking: [wreg+status,2+status,0+pclath+cstack]
  1445  01B4  1305               	bcf	5,6
  1446                           
  1447                           ;MS86F_PWM1_HALF.C: 425: PA3=1;
  1448  01B5  1585               	bsf	5,3
  1449                           
  1450                           ;MS86F_PWM1_HALF.C: 426: PC4=1;
  1451  01B6  1607               	bsf	7,4
  1452                           
  1453                           ;MS86F_PWM1_HALF.C: 428: second_cnt=0;
  1454  01B7  01C7               	clrf	_second_cnt	;volatile
  1455                           
  1456                           ;MS86F_PWM1_HALF.C: 429: working_timer=20*59;
  1457  01B8  309C               	movlw	156
  1458  01B9  00C2               	movwf	_working_timer
  1459  01BA  3004               	movlw	4
  1460  01BB  00C3               	movwf	_working_timer+1
  1461                           
  1462                           ;MS86F_PWM1_HALF.C: 431: work_sta=STATE_WORKING;
  1463  01BC  3002               	movlw	2
  1464  01BD  00F9               	movwf	_work_sta
  1465                           
  1466                           ;MS86F_PWM1_HALF.C: 432: led_blink();
  1467  01BE  29BF               	ljmp	l2936
  1468  01BF                     __end_of_SetUvWorking:	
  1469                           
  1470                           	psect	text771
  1471  021B                     __ptext771:	
  1472 ;; =============== function _SetUvWorking ends ============
  1473                           
  1474                           
  1475 ;; *************** function _led_off *****************
  1476 ;; Defined at:
  1477 ;;		line 407 in file "MS86F_PWM1_HALF.C"
  1478 ;; Parameters:    Size  Location     Type
  1479 ;;		None
  1480 ;; Auto vars:     Size  Location     Type
  1481 ;;		None
  1482 ;; Return value:  Size  Location     Type
  1483 ;;		None               void
  1484 ;; Registers used:
  1485 ;;		status,2, status,0, pclath, cstack
  1486 ;; Tracked objects:
  1487 ;;		On entry : 20/0
  1488 ;;		On exit  : 20/0
  1489 ;;		Unchanged: FFFDF/0
  1490 ;; Data sizes:     COMMON   BANK0
  1491 ;;      Params:         0       0
  1492 ;;      Locals:         0       0
  1493 ;;      Temps:          0       0
  1494 ;;      Totals:         0       0
  1495 ;;Total ram usage:        0 bytes
  1496 ;; Hardware stack levels used:    1
  1497 ;; Hardware stack levels required when called:    2
  1498 ;; This function calls:
  1499 ;;		_DISABLE_INTERRUPT
  1500 ;; This function is called by:
  1501 ;;		_SetUvSleep
  1502 ;; This function uses a non-reentrant model
  1503 ;;
  1504  021B                     _led_off:	
  1505                           
  1506                           ;MS86F_PWM1_HALF.C: 408: DISABLE_INTERRUPT();
  1507                           
  1508                           ; Regs used in _led_off: [status,2+status,0+pclath+cstack]
  1509  021B  2227               	fcall	_DISABLE_INTERRUPT
  1510                           
  1511                           ;MS86F_PWM1_HALF.C: 409: P1BOE = 0;
  1512  021C  1683               	bsf	3,5	;RP0=1, select bank1
  1513  021D  1310               	bcf	16,6
  1514                           
  1515                           ;MS86F_PWM1_HALF.C: 410: RA4=1;
  1516  021E  1283               	bcf	3,5	;RP0=0, select bank0
  1517  021F  1605               	bsf	5,4
  1518  0220  0008               	return
  1519  0221                     __end_of_led_off:	
  1520                           
  1521                           	psect	text772
  1522  0221                     __ptext772:	
  1523 ;; =============== function _led_off ends ============
  1524                           
  1525                           
  1526 ;; *************** function _led_on *****************
  1527 ;; Defined at:
  1528 ;;		line 401 in file "MS86F_PWM1_HALF.C"
  1529 ;; Parameters:    Size  Location     Type
  1530 ;;		None
  1531 ;; Auto vars:     Size  Location     Type
  1532 ;;		None
  1533 ;; Return value:  Size  Location     Type
  1534 ;;		None               void
  1535 ;; Registers used:
  1536 ;;		status,2, status,0, pclath, cstack
  1537 ;; Tracked objects:
  1538 ;;		On entry : 20/0
  1539 ;;		On exit  : 20/0
  1540 ;;		Unchanged: FFFDF/0
  1541 ;; Data sizes:     COMMON   BANK0
  1542 ;;      Params:         0       0
  1543 ;;      Locals:         0       0
  1544 ;;      Temps:          0       0
  1545 ;;      Totals:         0       0
  1546 ;;Total ram usage:        0 bytes
  1547 ;; Hardware stack levels used:    1
  1548 ;; Hardware stack levels required when called:    2
  1549 ;; This function calls:
  1550 ;;		_DISABLE_INTERRUPT
  1551 ;; This function is called by:
  1552 ;;		_SetUvBreaking
  1553 ;;		_SetUvCharged
  1554 ;;		_SetUvIdle
  1555 ;; This function uses a non-reentrant model
  1556 ;;
  1557  0221                     _led_on:	
  1558  0221                     l3004:	
  1559                           ; Regs used in _led_on: [status,2+status,0+pclath+cstack]
  1560                           
  1561                           
  1562                           ;MS86F_PWM1_HALF.C: 402: DISABLE_INTERRUPT();
  1563  0221  2227               	fcall	_DISABLE_INTERRUPT
  1564                           
  1565                           ;MS86F_PWM1_HALF.C: 403: P1BOE = 0;
  1566  0222  1683               	bsf	3,5	;RP0=1, select bank1
  1567  0223  1310               	bcf	16,6
  1568                           
  1569                           ;MS86F_PWM1_HALF.C: 404: RA4=0;
  1570  0224  1283               	bcf	3,5	;RP0=0, select bank0
  1571  0225  1205               	bcf	5,4
  1572  0226  0008               	return
  1573  0227                     __end_of_led_on:	
  1574                           
  1575                           	psect	text773
  1576  018C                     __ptext773:	
  1577 ;; =============== function _led_on ends ============
  1578                           
  1579                           
  1580 ;; *************** function _SYS_SLEEP *****************
  1581 ;; Defined at:
  1582 ;;		line 350 in file "MS86F_PWM1_HALF.C"
  1583 ;; Parameters:    Size  Location     Type
  1584 ;;		None
  1585 ;; Auto vars:     Size  Location     Type
  1586 ;;		None
  1587 ;; Return value:  Size  Location     Type
  1588 ;;		None               void
  1589 ;; Registers used:
  1590 ;;		None
  1591 ;; Tracked objects:
  1592 ;;		On entry : 20/0
  1593 ;;		On exit  : 0/0
  1594 ;;		Unchanged: 0/0
  1595 ;; Data sizes:     COMMON   BANK0
  1596 ;;      Params:         0       0
  1597 ;;      Locals:         0       0
  1598 ;;      Temps:          0       0
  1599 ;;      Totals:         0       0
  1600 ;;Total ram usage:        0 bytes
  1601 ;; Hardware stack levels used:    1
  1602 ;; Hardware stack levels required when called:    1
  1603 ;; This function calls:
  1604 ;;		Nothing
  1605 ;; This function is called by:
  1606 ;;		_SetUvSleep
  1607 ;; This function uses a non-reentrant model
  1608 ;;
  1609  018C                     _SYS_SLEEP:	
  1610                           
  1611                           ;MS86F_PWM1_HALF.C: 375: GIE = 0;
  1612                           
  1613                           ; Regs used in _SYS_SLEEP: []
  1614  018C  138B               	bcf	11,7
  1615  018D  0064               	clrwdt	;#
  1616                           
  1617                           ;MS86F_PWM1_HALF.C: 381: SLVREN = 0;
  1618  018E  1283               	bcf	3,5	;RP0=0, select bank0
  1619  018F  119B               	bcf	27,3
  1620                           
  1621                           ;MS86F_PWM1_HALF.C: 386: INTEDG = 0;
  1622  0190  1683               	bsf	3,5	;RP0=1, select bank1
  1623  0191  1301               	bcf	1,6
  1624                           
  1625                           ;MS86F_PWM1_HALF.C: 387: INTF = 0;
  1626  0192  108B               	bcf	11,1
  1627                           
  1628                           ;MS86F_PWM1_HALF.C: 388: INTE = 1;
  1629  0193  160B               	bsf	11,4
  1630  0194  0063               	sleep	;#
  1631                           
  1632                           ;MS86F_PWM1_HALF.C: 390: _nop();
  1633  0195  0000               	nop
  1634                           
  1635                           ;MS86F_PWM1_HALF.C: 391: INTE = 0;
  1636  0196  120B               	bcf	11,4
  1637                           
  1638                           ;MS86F_PWM1_HALF.C: 392: INTF = 0;
  1639  0197  108B               	bcf	11,1
  1640                           
  1641                           ;MS86F_PWM1_HALF.C: 393: SLVREN = 1;
  1642  0198  1283               	bcf	3,5	;RP0=0, select bank0
  1643  0199  159B               	bsf	27,3
  1644                           
  1645                           ;MS86F_PWM1_HALF.C: 394: SWDTEN = 1;
  1646  019A  1418               	bsf	24,0
  1647  019B  0064               	clrwdt	;#
  1648                           
  1649                           ;MS86F_PWM1_HALF.C: 396: GIE = 1;
  1650  019C  178B               	bsf	11,7
  1651  019D  0008               	return
  1652  019E                     __end_of_SYS_SLEEP:	
  1653                           
  1654                           	psect	text774
  1655  015F                     __ptext774:	
  1656 ;; =============== function _SYS_SLEEP ends ============
  1657                           
  1658                           
  1659 ;; *************** function _DELAY_MS *****************
  1660 ;; Defined at:
  1661 ;;		line 219 in file "MS86F_PWM1_HALF.C"
  1662 ;; Parameters:    Size  Location     Type
  1663 ;;  Time            2    3[COMMON] unsigned short 
  1664 ;; Auto vars:     Size  Location     Type
  1665 ;;  a               2    5[COMMON] unsigned short 
  1666 ;; Return value:  Size  Location     Type
  1667 ;;		None               void
  1668 ;; Registers used:
  1669 ;;		wreg, status,2, status,0, pclath, cstack
  1670 ;; Tracked objects:
  1671 ;;		On entry : 0/0
  1672 ;;		On exit  : 0/0
  1673 ;;		Unchanged: FFE00/0
  1674 ;; Data sizes:     COMMON   BANK0
  1675 ;;      Params:         2       0
  1676 ;;      Locals:         2       0
  1677 ;;      Temps:          0       0
  1678 ;;      Totals:         4       0
  1679 ;;Total ram usage:        4 bytes
  1680 ;; Hardware stack levels used:    1
  1681 ;; Hardware stack levels required when called:    2
  1682 ;; This function calls:
  1683 ;;		_DELAY_125US
  1684 ;; This function is called by:
  1685 ;;		_main
  1686 ;; This function uses a non-reentrant model
  1687 ;;
  1688  015F                     _DELAY_MS:	
  1689                           
  1690                           ;MS86F_PWM1_HALF.C: 220: unsigned short a;
  1691                           ;MS86F_PWM1_HALF.C: 222: Time<<=3;
  1692                           
  1693                           ; Regs used in _DELAY_MS: [wreg+status,2+status,0+pclath+cstack]
  1694  015F  1003               	clrc
  1695  0160  0DF3               	rlf	DELAY_MS@Time,f
  1696  0161  0DF4               	rlf	DELAY_MS@Time+1,f
  1697  0162  1003               	clrc
  1698  0163  0DF3               	rlf	DELAY_MS@Time,f
  1699  0164  0DF4               	rlf	DELAY_MS@Time+1,f
  1700  0165  1003               	clrc
  1701  0166  0DF3               	rlf	DELAY_MS@Time,f
  1702  0167  0DF4               	rlf	DELAY_MS@Time+1,f
  1703                           
  1704                           ;MS86F_PWM1_HALF.C: 224: for(a=0;a<Time;a++)
  1705  0168  01F5               	clrf	DELAY_MS@a
  1706  0169  01F6               	clrf	DELAY_MS@a+1
  1707  016A                     l3000:	
  1708  016A  0874               	movf	DELAY_MS@Time+1,w
  1709  016B  0276               	subwf	DELAY_MS@a+1,w
  1710  016C  1D03               	skipz
  1711  016D  2970               	goto	u1195
  1712  016E  0873               	movf	DELAY_MS@Time,w
  1713  016F  0275               	subwf	DELAY_MS@a,w
  1714  0170                     u1195:	
  1715  0170  1803               	btfsc	3,0
  1716  0171  0008               	return
  1717                           
  1718                           ;MS86F_PWM1_HALF.C: 225: {
  1719                           ;MS86F_PWM1_HALF.C: 226: DELAY_125US();
  1720  0172  220C               	fcall	_DELAY_125US
  1721  0173  0AF5               	incf	DELAY_MS@a,f
  1722  0174  1903               	skipnz
  1723  0175  0AF6               	incf	DELAY_MS@a+1,f
  1724  0176  296A               	goto	l3000
  1725  0177                     __end_of_DELAY_MS:	
  1726                           
  1727                           	psect	text775
  1728  0204                     __ptext775:	
  1729 ;; =============== function _DELAY_MS ends ============
  1730                           
  1731                           
  1732 ;; *************** function _GetPwrSta *****************
  1733 ;; Defined at:
  1734 ;;		line 526 in file "MS86F_PWM1_HALF.C"
  1735 ;; Parameters:    Size  Location     Type
  1736 ;;		None
  1737 ;; Auto vars:     Size  Location     Type
  1738 ;;		None
  1739 ;; Return value:  Size  Location     Type
  1740 ;;                  1    wreg      enum E1037
  1741 ;; Registers used:
  1742 ;;		wreg
  1743 ;; Tracked objects:
  1744 ;;		On entry : 20/0
  1745 ;;		On exit  : 0/0
  1746 ;;		Unchanged: FFFDF/0
  1747 ;; Data sizes:     COMMON   BANK0
  1748 ;;      Params:         0       0
  1749 ;;      Locals:         0       0
  1750 ;;      Temps:          0       0
  1751 ;;      Totals:         0       0
  1752 ;;Total ram usage:        0 bytes
  1753 ;; Hardware stack levels used:    1
  1754 ;; Hardware stack levels required when called:    1
  1755 ;; This function calls:
  1756 ;;		Nothing
  1757 ;; This function is called by:
  1758 ;;		_main
  1759 ;; This function uses a non-reentrant model
  1760 ;;
  1761  0204                     _GetPwrSta:	
  1762                           
  1763                           ;MS86F_PWM1_HALF.C: 527: if(PC0==0)return POWER_FULL;
  1764                           
  1765                           ; Regs used in _GetPwrSta: [wreg]
  1766  0204  1C07               	btfss	7,0
  1767  0205  3402               	retlw	2
  1768                           
  1769                           ;MS86F_PWM1_HALF.C: 528: else if(RA7==0)return POWER_CHARGING;
  1770  0206  1F85               	btfss	5,7
  1771  0207  3401               	retlw	1
  1772                           
  1773                           ;MS86F_PWM1_HALF.C: 529: else if(LVDW)return POWER_LOW;
  1774  0208  1683               	bsf	3,5	;RP0=1, select bank1
  1775  0209  190E               	btfsc	14,2
  1776  020A  3403               	retlw	3
  1777                           
  1778                           ;MS86F_PWM1_HALF.C: 530: else return POWER_NORMAL;
  1779  020B  3400               	retlw	0
  1780  020C                     __end_of_GetPwrSta:	
  1781                           
  1782                           	psect	text776
  1783  0126                     __ptext776:	
  1784 ;; =============== function _GetPwrSta ends ============
  1785                           
  1786                           
  1787 ;; *************** function _GetKeyEvent *****************
  1788 ;; Defined at:
  1789 ;;		line 507 in file "MS86F_PWM1_HALF.C"
  1790 ;; Parameters:    Size  Location     Type
  1791 ;;		None
  1792 ;; Auto vars:     Size  Location     Type
  1793 ;;  key_event       1    2[COMMON] unsigned char 
  1794 ;; Return value:  Size  Location     Type
  1795 ;;                  1    wreg      unsigned char 
  1796 ;; Registers used:
  1797 ;;		wreg, status,2, status,0
  1798 ;; Tracked objects:
  1799 ;;		On entry : 0/0
  1800 ;;		On exit  : 20/0
  1801 ;;		Unchanged: FFFDF/0
  1802 ;; Data sizes:     COMMON   BANK0
  1803 ;;      Params:         0       0
  1804 ;;      Locals:         1       0
  1805 ;;      Temps:          0       0
  1806 ;;      Totals:         1       0
  1807 ;;Total ram usage:        1 bytes
  1808 ;; Hardware stack levels used:    1
  1809 ;; Hardware stack levels required when called:    1
  1810 ;; This function calls:
  1811 ;;		Nothing
  1812 ;; This function is called by:
  1813 ;;		_main
  1814 ;; This function uses a non-reentrant model
  1815 ;;
  1816  0126                     _GetKeyEvent:	
  1817                           
  1818                           ;MS86F_PWM1_HALF.C: 509: unsigned char key_event=0;
  1819                           
  1820                           ; Regs used in _GetKeyEvent: [wreg+status,2+status,0]
  1821  0126  01F2               	clrf	GetKeyEvent@key_event
  1822                           
  1823                           ;MS86F_PWM1_HALF.C: 510: if(PA2==0)
  1824  0127  1283               	bcf	3,5	;RP0=0, select bank0
  1825  0128  1905               	btfsc	5,2
  1826  0129  2936               	goto	l2956
  1827                           
  1828                           ;MS86F_PWM1_HALF.C: 511: {
  1829                           ;MS86F_PWM1_HALF.C: 512: if(keytime<200)
  1830  012A  30C8               	movlw	200
  1831  012B  027B               	subwf	_keytime,w	;volatile
  1832  012C  1803               	skipnc
  1833  012D  2941               	goto	l2964
  1834                           
  1835                           ;MS86F_PWM1_HALF.C: 513: {
  1836                           ;MS86F_PWM1_HALF.C: 514: keytime++;
  1837  012E  0AFB               	incf	_keytime,f	;volatile
  1838                           
  1839                           ;MS86F_PWM1_HALF.C: 515: if(keytime>=200)key_event = 2;
  1840  012F  30C8               	movlw	200
  1841  0130  027B               	subwf	_keytime,w	;volatile
  1842  0131  1C03               	skipc
  1843  0132  2941               	goto	l2964
  1844  0133  3002               	movlw	2
  1845  0134  00F2               	movwf	GetKeyEvent@key_event
  1846  0135  2941               	goto	l2964
  1847  0136                     l2956:	
  1848                           
  1849                           ;MS86F_PWM1_HALF.C: 518: else
  1850                           ;MS86F_PWM1_HALF.C: 519: {
  1851                           ;MS86F_PWM1_HALF.C: 520: if(keytime>10 && keytime<200)key_event=1;
  1852  0136  300B               	movlw	11
  1853  0137  027B               	subwf	_keytime,w	;volatile
  1854  0138  1C03               	skipc
  1855  0139  2940               	goto	l2962
  1856  013A  30C8               	movlw	200
  1857  013B  027B               	subwf	_keytime,w	;volatile
  1858  013C  1803               	skipnc
  1859  013D  2940               	goto	l2962
  1860  013E  01F2               	clrf	GetKeyEvent@key_event
  1861  013F  0AF2               	incf	GetKeyEvent@key_event,f
  1862  0140                     l2962:	
  1863                           
  1864                           ;MS86F_PWM1_HALF.C: 521: keytime=0;
  1865  0140  01FB               	clrf	_keytime	;volatile
  1866  0141                     l2964:	
  1867                           
  1868                           ;MS86F_PWM1_HALF.C: 522: }
  1869                           ;MS86F_PWM1_HALF.C: 523: return key_event;
  1870  0141  0872               	movf	GetKeyEvent@key_event,w
  1871  0142  0008               	return
  1872  0143                     __end_of_GetKeyEvent:	
  1873                           
  1874                           	psect	text777
  1875  01BF                     __ptext777:	
  1876 ;; =============== function _GetKeyEvent ends ============
  1877                           
  1878                           
  1879 ;; *************** function _led_blink *****************
  1880 ;; Defined at:
  1881 ;;		line 413 in file "MS86F_PWM1_HALF.C"
  1882 ;; Parameters:    Size  Location     Type
  1883 ;;		None
  1884 ;; Auto vars:     Size  Location     Type
  1885 ;;		None
  1886 ;; Return value:  Size  Location     Type
  1887 ;;		None               void
  1888 ;; Registers used:
  1889 ;;		wreg, status,2, status,0
  1890 ;; Tracked objects:
  1891 ;;		On entry : 20/0
  1892 ;;		On exit  : 20/20
  1893 ;;		Unchanged: FFFDF/0
  1894 ;; Data sizes:     COMMON   BANK0
  1895 ;;      Params:         0       0
  1896 ;;      Locals:         0       0
  1897 ;;      Temps:          0       0
  1898 ;;      Totals:         0       0
  1899 ;;Total ram usage:        0 bytes
  1900 ;; Hardware stack levels used:    1
  1901 ;; Hardware stack levels required when called:    1
  1902 ;; This function calls:
  1903 ;;		Nothing
  1904 ;; This function is called by:
  1905 ;;		_SetUvWorking
  1906 ;;		_SetUvWarning
  1907 ;;		_SetUvCharging
  1908 ;; This function uses a non-reentrant model
  1909 ;;
  1910  01BF                     _led_blink:	
  1911  01BF                     l2936:	
  1912                           ; Regs used in _led_blink: [wreg+status,2+status,0]
  1913                           
  1914                           
  1915                           ;MS86F_PWM1_HALF.C: 414: brigtness=5;
  1916  01BF  3005               	movlw	5
  1917  01C0  00F7               	movwf	_brigtness	;volatile
  1918  01C1  01F8               	clrf	_brigtness+1	;volatile
  1919                           
  1920                           ;MS86F_PWM1_HALF.C: 415: dir=1;
  1921  01C2  01C9               	clrf	_dir	;volatile
  1922  01C3  0AC9               	incf	_dir,f	;volatile
  1923                           
  1924                           ;MS86F_PWM1_HALF.C: 416: P1BDTL=200-brigtness;
  1925  01C4  0877               	movf	_brigtness,w	;volatile
  1926  01C5  3CC8               	sublw	200
  1927  01C6  008F               	movwf	15	;volatile
  1928                           
  1929                           ;MS86F_PWM1_HALF.C: 417: P1BOE = 1;
  1930  01C7  1683               	bsf	3,5	;RP0=1, select bank1
  1931  01C8  1710               	bsf	16,6
  1932  01C9  0008               	return
  1933  01CA                     __end_of_led_blink:	
  1934                           
  1935                           	psect	text778
  1936  022D                     __ptext778:	
  1937 ;; =============== function _led_blink ends ============
  1938                           
  1939                           
  1940 ;; *************** function _LVD_INIT *****************
  1941 ;; Defined at:
  1942 ;;		line 337 in file "MS86F_PWM1_HALF.C"
  1943 ;; Parameters:    Size  Location     Type
  1944 ;;		None
  1945 ;; Auto vars:     Size  Location     Type
  1946 ;;		None
  1947 ;; Return value:  Size  Location     Type
  1948 ;;		None               void
  1949 ;; Registers used:
  1950 ;;		wreg
  1951 ;; Tracked objects:
  1952 ;;		On entry : 20/20
  1953 ;;		On exit  : 20/20
  1954 ;;		Unchanged: FFFDF/0
  1955 ;; Data sizes:     COMMON   BANK0
  1956 ;;      Params:         0       0
  1957 ;;      Locals:         0       0
  1958 ;;      Temps:          0       0
  1959 ;;      Totals:         0       0
  1960 ;;Total ram usage:        0 bytes
  1961 ;; Hardware stack levels used:    1
  1962 ;; Hardware stack levels required when called:    1
  1963 ;; This function calls:
  1964 ;;		Nothing
  1965 ;; This function is called by:
  1966 ;;		_main
  1967 ;; This function uses a non-reentrant model
  1968 ;;
  1969  022D                     _LVD_INIT:	
  1970                           
  1971                           ;MS86F_PWM1_HALF.C: 339: PCON = 0B11010011;
  1972                           
  1973                           ; Regs used in _LVD_INIT: [wreg]
  1974  022D  30D3               	movlw	211
  1975  022E  008E               	movwf	14	;volatile
  1976                           
  1977                           ;MS86F_PWM1_HALF.C: 346: LVDEN = 1;
  1978  022F  158E               	bsf	14,3
  1979  0230  0008               	return
  1980  0231                     __end_of_LVD_INIT:	
  1981                           
  1982                           	psect	text779
  1983  0227                     __ptext779:	
  1984 ;; =============== function _LVD_INIT ends ============
  1985                           
  1986                           
  1987 ;; *************** function _DISABLE_INTERRUPT *****************
  1988 ;; Defined at:
  1989 ;;		line 321 in file "MS86F_PWM1_HALF.C"
  1990 ;; Parameters:    Size  Location     Type
  1991 ;;		None
  1992 ;; Auto vars:     Size  Location     Type
  1993 ;;		None
  1994 ;; Return value:  Size  Location     Type
  1995 ;;		None               void
  1996 ;; Registers used:
  1997 ;;		None
  1998 ;; Tracked objects:
  1999 ;;		On entry : 20/0
  2000 ;;		On exit  : 20/0
  2001 ;;		Unchanged: FFFDF/0
  2002 ;; Data sizes:     COMMON   BANK0
  2003 ;;      Params:         0       0
  2004 ;;      Locals:         0       0
  2005 ;;      Temps:          0       0
  2006 ;;      Totals:         0       0
  2007 ;;Total ram usage:        0 bytes
  2008 ;; Hardware stack levels used:    1
  2009 ;; Hardware stack levels required when called:    1
  2010 ;; This function calls:
  2011 ;;		Nothing
  2012 ;; This function is called by:
  2013 ;;		_led_on
  2014 ;;		_led_off
  2015 ;; This function uses a non-reentrant model
  2016 ;;
  2017  0227                     _DISABLE_INTERRUPT:	
  2018                           
  2019                           ;MS86F_PWM1_HALF.C: 322: INTE = 0;
  2020                           
  2021                           ; Regs used in _DISABLE_INTERRUPT: []
  2022  0227  120B               	bcf	11,4
  2023                           
  2024                           ;MS86F_PWM1_HALF.C: 324: T0IF = 0;
  2025  0228  110B               	bcf	11,2
  2026                           
  2027                           ;MS86F_PWM1_HALF.C: 325: T0IE = 0;
  2028  0229  128B               	bcf	11,5
  2029                           
  2030                           ;MS86F_PWM1_HALF.C: 326: T0ON = 0;
  2031  022A  119F               	bcf	31,3
  2032                           
  2033                           ;MS86F_PWM1_HALF.C: 328: GIE = 0;
  2034  022B  138B               	bcf	11,7
  2035  022C  0008               	return
  2036  022D                     __end_of_DISABLE_INTERRUPT:	
  2037                           
  2038                           	psect	text780
  2039  01DE                     __ptext780:	
  2040 ;; =============== function _DISABLE_INTERRUPT ends ============
  2041                           
  2042                           
  2043 ;; *************** function _ENABLE_INTERRUPT *****************
  2044 ;; Defined at:
  2045 ;;		line 309 in file "MS86F_PWM1_HALF.C"
  2046 ;; Parameters:    Size  Location     Type
  2047 ;;		None
  2048 ;; Auto vars:     Size  Location     Type
  2049 ;;		None
  2050 ;; Return value:  Size  Location     Type
  2051 ;;		None               void
  2052 ;; Registers used:
  2053 ;;		None
  2054 ;; Tracked objects:
  2055 ;;		On entry : 20/20
  2056 ;;		On exit  : 20/20
  2057 ;;		Unchanged: FFFDF/0
  2058 ;; Data sizes:     COMMON   BANK0
  2059 ;;      Params:         0       0
  2060 ;;      Locals:         0       0
  2061 ;;      Temps:          0       0
  2062 ;;      Totals:         0       0
  2063 ;;Total ram usage:        0 bytes
  2064 ;; Hardware stack levels used:    1
  2065 ;; Hardware stack levels required when called:    1
  2066 ;; This function calls:
  2067 ;;		Nothing
  2068 ;; This function is called by:
  2069 ;;		_main
  2070 ;; This function uses a non-reentrant model
  2071 ;;
  2072  01DE                     _ENABLE_INTERRUPT:	
  2073                           
  2074                           ;MS86F_PWM1_HALF.C: 310: T0IF = 0;
  2075                           
  2076                           ; Regs used in _ENABLE_INTERRUPT: []
  2077  01DE  110B               	bcf	11,2
  2078                           
  2079                           ;MS86F_PWM1_HALF.C: 311: T0IE = 1;
  2080  01DF  168B               	bsf	11,5
  2081                           
  2082                           ;MS86F_PWM1_HALF.C: 312: T0ON = 1;
  2083  01E0  1283               	bcf	3,5	;RP0=0, select bank0
  2084  01E1  159F               	bsf	31,3
  2085                           
  2086                           ;MS86F_PWM1_HALF.C: 314: INTEDG = 0;
  2087  01E2  1683               	bsf	3,5	;RP0=1, select bank1
  2088  01E3  1301               	bcf	1,6
  2089                           
  2090                           ;MS86F_PWM1_HALF.C: 315: INTF = 0;
  2091  01E4  108B               	bcf	11,1
  2092                           
  2093                           ;MS86F_PWM1_HALF.C: 316: INTE = 1;
  2094  01E5  160B               	bsf	11,4
  2095                           
  2096                           ;MS86F_PWM1_HALF.C: 318: GIE = 1;
  2097  01E6  178B               	bsf	11,7
  2098  01E7  0008               	return
  2099  01E8                     __end_of_ENABLE_INTERRUPT:	
  2100                           
  2101                           	psect	text781
  2102  020C                     __ptext781:	
  2103 ;; =============== function _ENABLE_INTERRUPT ends ============
  2104                           
  2105                           
  2106 ;; *************** function _DELAY_125US *****************
  2107 ;; Defined at:
  2108 ;;		line 210 in file "MS86F_PWM1_HALF.C"
  2109 ;; Parameters:    Size  Location     Type
  2110 ;;		None
  2111 ;; Auto vars:     Size  Location     Type
  2112 ;;  a               1    2[COMMON] unsigned char 
  2113 ;; Return value:  Size  Location     Type
  2114 ;;		None               void
  2115 ;; Registers used:
  2116 ;;		wreg, status,2, status,0
  2117 ;; Tracked objects:
  2118 ;;		On entry : 0/0
  2119 ;;		On exit  : 0/0
  2120 ;;		Unchanged: FFE00/0
  2121 ;; Data sizes:     COMMON   BANK0
  2122 ;;      Params:         0       0
  2123 ;;      Locals:         1       0
  2124 ;;      Temps:          0       0
  2125 ;;      Totals:         1       0
  2126 ;;Total ram usage:        1 bytes
  2127 ;; Hardware stack levels used:    1
  2128 ;; Hardware stack levels required when called:    1
  2129 ;; This function calls:
  2130 ;;		Nothing
  2131 ;; This function is called by:
  2132 ;;		_DELAY_MS
  2133 ;; This function uses a non-reentrant model
  2134 ;;
  2135  020C                     _DELAY_125US:	
  2136                           
  2137                           ;MS86F_PWM1_HALF.C: 211: unsigned char a;
  2138                           ;MS86F_PWM1_HALF.C: 213: for(a=0;a<125;a++)
  2139                           
  2140                           ; Regs used in _DELAY_125US: [wreg+status,2+status,0]
  2141  020C  01F2               	clrf	DELAY_125US@a
  2142  020D                     l823:	
  2143  020D  0064               	clrwdt	;#
  2144  020E  307D               	movlw	125
  2145  020F  0AF2               	incf	DELAY_125US@a,f
  2146  0210  0272               	subwf	DELAY_125US@a,w
  2147  0211  1803               	btfsc	3,0
  2148  0212  0008               	return
  2149  0213  2A0D               	goto	l823
  2150  0214                     __end_of_DELAY_125US:	
  2151                           
  2152                           	psect	text782
  2153  01E8                     __ptext782:	
  2154 ;; =============== function _DELAY_125US ends ============
  2155                           
  2156                           
  2157 ;; *************** function _WDT_INIT *****************
  2158 ;; Defined at:
  2159 ;;		line 191 in file "MS86F_PWM1_HALF.C"
  2160 ;; Parameters:    Size  Location     Type
  2161 ;;		None
  2162 ;; Auto vars:     Size  Location     Type
  2163 ;;		None
  2164 ;; Return value:  Size  Location     Type
  2165 ;;		None               void
  2166 ;; Registers used:
  2167 ;;		wreg
  2168 ;; Tracked objects:
  2169 ;;		On entry : 20/0
  2170 ;;		On exit  : 20/0
  2171 ;;		Unchanged: FFE00/0
  2172 ;; Data sizes:     COMMON   BANK0
  2173 ;;      Params:         0       0
  2174 ;;      Locals:         0       0
  2175 ;;      Temps:          0       0
  2176 ;;      Totals:         0       0
  2177 ;;Total ram usage:        0 bytes
  2178 ;; Hardware stack levels used:    1
  2179 ;; Hardware stack levels required when called:    1
  2180 ;; This function calls:
  2181 ;;		Nothing
  2182 ;; This function is called by:
  2183 ;;		_main
  2184 ;; This function uses a non-reentrant model
  2185 ;;
  2186  01E8                     _WDT_INIT:	
  2187                           
  2188                           ;MS86F_PWM1_HALF.C: 192: SWDTEN = 0;
  2189                           
  2190                           ; Regs used in _WDT_INIT: [wreg]
  2191  01E8  1018               	bcf	24,0
  2192  01E9  0064               	clrwdt	;#
  2193                           
  2194                           ;MS86F_PWM1_HALF.C: 197: OPTION = 0B00001000;
  2195  01EA  3008               	movlw	8
  2196  01EB  1683               	bsf	3,5	;RP0=1, select bank1
  2197  01EC  0081               	movwf	1	;volatile
  2198                           
  2199                           ;MS86F_PWM1_HALF.C: 198: WDTCON = 0B00010101;
  2200  01ED  3015               	movlw	21
  2201  01EE  1283               	bcf	3,5	;RP0=0, select bank0
  2202  01EF  0098               	movwf	24	;volatile
  2203                           
  2204                           ;MS86F_PWM1_HALF.C: 201: SWDTEN = 1;
  2205  01F0  1418               	bsf	24,0
  2206  01F1  0008               	return
  2207  01F2                     __end_of_WDT_INIT:	
  2208                           
  2209                           	psect	text783
  2210  0105                     __ptext783:	
  2211 ;; =============== function _WDT_INIT ends ============
  2212                           
  2213                           
  2214 ;; *************** function _PWM1_INIT *****************
  2215 ;; Defined at:
  2216 ;;		line 133 in file "MS86F_PWM1_HALF.C"
  2217 ;; Parameters:    Size  Location     Type
  2218 ;;		None
  2219 ;; Auto vars:     Size  Location     Type
  2220 ;;		None
  2221 ;; Return value:  Size  Location     Type
  2222 ;;		None               void
  2223 ;; Registers used:
  2224 ;;		wreg, status,2
  2225 ;; Tracked objects:
  2226 ;;		On entry : 17F/0
  2227 ;;		On exit  : 20/20
  2228 ;;		Unchanged: FFE00/0
  2229 ;; Data sizes:     COMMON   BANK0
  2230 ;;      Params:         0       0
  2231 ;;      Locals:         0       0
  2232 ;;      Temps:          0       0
  2233 ;;      Totals:         0       0
  2234 ;;Total ram usage:        0 bytes
  2235 ;; Hardware stack levels used:    1
  2236 ;; Hardware stack levels required when called:    1
  2237 ;; This function calls:
  2238 ;;		Nothing
  2239 ;; This function is called by:
  2240 ;;		_main
  2241 ;; This function uses a non-reentrant model
  2242 ;;
  2243  0105                     _PWM1_INIT:	
  2244                           
  2245                           ;MS86F_PWM1_HALF.C: 134: TRISA |= 0B00010000;
  2246                           
  2247                           ; Regs used in _PWM1_INIT: [wreg+status,2]
  2248  0105  1683               	bsf	3,5	;RP0=1, select bank1
  2249  0106  1605               	bsf	5,4	;volatile
  2250                           
  2251                           ;MS86F_PWM1_HALF.C: 137: T2CON0 = 0B00000001;
  2252  0107  3001               	movlw	1
  2253  0108  1283               	bcf	3,5	;RP0=0, select bank0
  2254  0109  0092               	movwf	18	;volatile
  2255                           
  2256                           ;MS86F_PWM1_HALF.C: 138: T2CON1 = 0B00000000;
  2257  010A  1683               	bsf	3,5	;RP0=1, select bank1
  2258  010B  019E               	clrf	30	;volatile
  2259                           
  2260                           ;MS86F_PWM1_HALF.C: 139: PR2H = 0;
  2261  010C  0192               	clrf	18	;volatile
  2262                           
  2263                           ;MS86F_PWM1_HALF.C: 140: PR2L = 200-1;
  2264  010D  30C7               	movlw	199
  2265  010E  0091               	movwf	17	;volatile
  2266                           
  2267                           ;MS86F_PWM1_HALF.C: 142: P1BDTH = 0;
  2268  010F  1283               	bcf	3,5	;RP0=0, select bank0
  2269  0110  0195               	clrf	21	;volatile
  2270                           
  2271                           ;MS86F_PWM1_HALF.C: 143: P1BDTL = 200-5;
  2272  0111  30C3               	movlw	195
  2273  0112  008F               	movwf	15	;volatile
  2274                           
  2275                           ;MS86F_PWM1_HALF.C: 147: P1OE = 0B01000000;
  2276  0113  3040               	movlw	64
  2277  0114  1683               	bsf	3,5	;RP0=1, select bank1
  2278  0115  0090               	movwf	16	;volatile
  2279                           
  2280                           ;MS86F_PWM1_HALF.C: 150: P1POL = 0B00000000;
  2281  0116  0199               	clrf	25	;volatile
  2282                           
  2283                           ;MS86F_PWM1_HALF.C: 151: P1CON = 0B00001000;
  2284  0117  3008               	movlw	8
  2285  0118  1283               	bcf	3,5	;RP0=0, select bank0
  2286  0119  0096               	movwf	22	;volatile
  2287                           
  2288                           ;MS86F_PWM1_HALF.C: 152: TMR2H = 0;
  2289  011A  0193               	clrf	19	;volatile
  2290                           
  2291                           ;MS86F_PWM1_HALF.C: 153: TMR2L = 0;
  2292  011B  0191               	clrf	17	;volatile
  2293                           
  2294                           ;MS86F_PWM1_HALF.C: 154: TMR2IF = 0;
  2295  011C  108C               	bcf	12,1
  2296                           
  2297                           ;MS86F_PWM1_HALF.C: 155: TMR2ON = 1;
  2298  011D  1512               	bsf	18,2
  2299  011E                     l814:	
  2300                           ;MS86F_PWM1_HALF.C: 156: while(TMR2IF==0) asm("clrwdt");
  2301                           
  2302  011E  1283               	bcf	3,5	;RP0=0, select bank0
  2303  011F  188C               	btfsc	12,1
  2304  0120  2923               	goto	l816
  2305  0121  0064               	clrwdt	;#
  2306  0122  291E               	goto	l814
  2307  0123                     l816:	
  2308                           
  2309                           ;MS86F_PWM1_HALF.C: 157: TRISA &= 0B11101111;
  2310  0123  1683               	bsf	3,5	;RP0=1, select bank1
  2311  0124  1205               	bcf	5,4	;volatile
  2312  0125  0008               	return
  2313  0126                     __end_of_PWM1_INIT:	
  2314                           
  2315                           	psect	text784
  2316  0143                     __ptext784:	
  2317 ;; =============== function _PWM1_INIT ends ============
  2318                           
  2319                           
  2320 ;; *************** function _DEVICE_INIT *****************
  2321 ;; Defined at:
  2322 ;;		line 98 in file "MS86F_PWM1_HALF.C"
  2323 ;; Parameters:    Size  Location     Type
  2324 ;;		None
  2325 ;; Auto vars:     Size  Location     Type
  2326 ;;		None
  2327 ;; Return value:  Size  Location     Type
  2328 ;;		None               void
  2329 ;; Registers used:
  2330 ;;		wreg, status,2
  2331 ;; Tracked objects:
  2332 ;;		On entry : 17F/0
  2333 ;;		On exit  : 17F/0
  2334 ;;		Unchanged: FFE80/0
  2335 ;; Data sizes:     COMMON   BANK0
  2336 ;;      Params:         0       0
  2337 ;;      Locals:         0       0
  2338 ;;      Temps:          0       0
  2339 ;;      Totals:         0       0
  2340 ;;Total ram usage:        0 bytes
  2341 ;; Hardware stack levels used:    1
  2342 ;; Hardware stack levels required when called:    1
  2343 ;; This function calls:
  2344 ;;		Nothing
  2345 ;; This function is called by:
  2346 ;;		_main
  2347 ;; This function uses a non-reentrant model
  2348 ;;
  2349  0143                     _DEVICE_INIT:	
  2350                           
  2351                           ;MS86F_PWM1_HALF.C: 99: OSCCON = 0B01110001;
  2352                           
  2353                           ; Regs used in _DEVICE_INIT: [wreg+status,2]
  2354  0143  3071               	movlw	113
  2355  0144  1683               	bsf	3,5	;RP0=1, select bank1
  2356  0145  008F               	movwf	15	;volatile
  2357                           
  2358                           ;MS86F_PWM1_HALF.C: 102: INTCON = 0B00000000;
  2359  0146  018B               	clrf	11	;volatile
  2360                           
  2361                           ;MS86F_PWM1_HALF.C: 103: OPTION = 0B00001000;
  2362  0147  3008               	movlw	8
  2363  0148  0081               	movwf	1	;volatile
  2364                           
  2365                           ;MS86F_PWM1_HALF.C: 105: PORTA = 0B01010000;
  2366  0149  3050               	movlw	80
  2367  014A  1283               	bcf	3,5	;RP0=0, select bank0
  2368  014B  0085               	movwf	5	;volatile
  2369                           
  2370                           ;MS86F_PWM1_HALF.C: 106: TRISA = 0B10100111;
  2371  014C  30A7               	movlw	167
  2372  014D  1683               	bsf	3,5	;RP0=1, select bank1
  2373  014E  0085               	movwf	5	;volatile
  2374                           
  2375                           ;MS86F_PWM1_HALF.C: 107: WPUA = 0B10100111;
  2376  014F  0095               	movwf	21	;volatile
  2377                           
  2378                           ;MS86F_PWM1_HALF.C: 109: PORTC = 0B00000000;
  2379  0150  1283               	bcf	3,5	;RP0=0, select bank0
  2380  0151  0187               	clrf	7	;volatile
  2381                           
  2382                           ;MS86F_PWM1_HALF.C: 110: TRISC = 0B11101111;
  2383  0152  30EF               	movlw	239
  2384  0153  1683               	bsf	3,5	;RP0=1, select bank1
  2385  0154  0087               	movwf	7	;volatile
  2386                           
  2387                           ;MS86F_PWM1_HALF.C: 111: WPUC = 0B11101111;
  2388  0155  0093               	movwf	19	;volatile
  2389                           
  2390                           ;MS86F_PWM1_HALF.C: 113: PSRCA = 0B11111111;
  2391  0156  30FF               	movlw	255
  2392  0157  0088               	movwf	8	;volatile
  2393                           
  2394                           ;MS86F_PWM1_HALF.C: 114: PSRCC = 0B11111111;
  2395  0158  0094               	movwf	20	;volatile
  2396                           
  2397                           ;MS86F_PWM1_HALF.C: 115: PSINKA = 0B11111111;
  2398  0159  0097               	movwf	23	;volatile
  2399                           
  2400                           ;MS86F_PWM1_HALF.C: 116: PSINKC = 0B11111111;
  2401  015A  009F               	movwf	31	;volatile
  2402                           
  2403                           ;MS86F_PWM1_HALF.C: 117: MSCON = 0B00110000;
  2404  015B  3030               	movlw	48
  2405  015C  1283               	bcf	3,5	;RP0=0, select bank0
  2406  015D  009B               	movwf	27	;volatile
  2407  015E  0008               	return
  2408  015F                     __end_of_DEVICE_INIT:	
  2409                           
  2410                           	psect	text785
  2411  00BC                     __ptext785:	
  2412 ;; =============== function _DEVICE_INIT ends ============
  2413                           
  2414                           
  2415 ;; *************** function _ISR *****************
  2416 ;; Defined at:
  2417 ;;		line 237 in file "MS86F_PWM1_HALF.C"
  2418 ;; Parameters:    Size  Location     Type
  2419 ;;		None
  2420 ;; Auto vars:     Size  Location     Type
  2421 ;;		None
  2422 ;; Return value:  Size  Location     Type
  2423 ;;		None               void
  2424 ;; Registers used:
  2425 ;;		wreg, status,2, status,0
  2426 ;; Tracked objects:
  2427 ;;		On entry : 0/0
  2428 ;;		On exit  : 0/0
  2429 ;;		Unchanged: FFFDF/0
  2430 ;; Data sizes:     COMMON   BANK0
  2431 ;;      Params:         0       0
  2432 ;;      Locals:         0       0
  2433 ;;      Temps:          2       0
  2434 ;;      Totals:         2       0
  2435 ;;Total ram usage:        2 bytes
  2436 ;; Hardware stack levels used:    1
  2437 ;; This function calls:
  2438 ;;		Nothing
  2439 ;; This function is called by:
  2440 ;;		Interrupt level 1
  2441 ;; This function uses a non-reentrant model
  2442 ;;
  2443  00BC                     _ISR:	
  2444                           
  2445                           ;MS86F_PWM1_HALF.C: 239: if(INTE&&INTF)
  2446  00BC  1A0B               	btfsc	11,4
  2447  00BD  1C8B               	btfss	11,1
  2448  00BE  28C0               	goto	i1l834
  2449                           
  2450                           ;MS86F_PWM1_HALF.C: 240: {
  2451                           ;MS86F_PWM1_HALF.C: 241: INTF = 0;
  2452  00BF  108B               	bcf	11,1
  2453  00C0                     i1l834:	
  2454                           
  2455                           ;MS86F_PWM1_HALF.C: 242: }
  2456                           ;MS86F_PWM1_HALF.C: 244: if(T0IE&&T0IF)
  2457  00C0  1A8B               	btfsc	11,5
  2458  00C1  1D0B               	btfss	11,2
  2459  00C2  28FE               	goto	i1l850
  2460  00C3  3006               	movlw	6
  2461                           
  2462                           ;MS86F_PWM1_HALF.C: 245: {
  2463                           ;MS86F_PWM1_HALF.C: 246: T0IF = 0;
  2464  00C4  110B               	bcf	11,2
  2465                           
  2466                           ;MS86F_PWM1_HALF.C: 247: TMR0 = 6;
  2467  00C5  1283               	bcf	3,5	;RP0=0, select bank0
  2468  00C6  0081               	movwf	1	;volatile
  2469                           
  2470                           ;MS86F_PWM1_HALF.C: 248: T0_cnt++;
  2471  00C7  0AC4               	incf	_T0_cnt,f	;volatile
  2472                           
  2473                           ;MS86F_PWM1_HALF.C: 249: if(T0_cnt>=125)
  2474  00C8  307D               	movlw	125
  2475  00C9  0244               	subwf	_T0_cnt,w	;volatile
  2476  00CA  1803               	btfsc	3,0
  2477                           
  2478                           ;MS86F_PWM1_HALF.C: 250: {
  2479                           ;MS86F_PWM1_HALF.C: 252: T0_cnt=0;
  2480  00CB  01C4               	clrf	_T0_cnt	;volatile
  2481                           
  2482                           ;MS86F_PWM1_HALF.C: 253: }
  2483                           ;MS86F_PWM1_HALF.C: 255: if(work_sta==STATE_WARNING || work_sta==STATE_WORKING || work_s
      +                          ta==STATE_CHARGING)
  2484  00CC  0879               	movf	_work_sta,w
  2485  00CD  3A03               	xorlw	3
  2486  00CE  1903               	skipnz
  2487  00CF  28D8               	goto	i1l2518
  2488  00D0  0879               	movf	_work_sta,w
  2489  00D1  3A02               	xorlw	2
  2490  00D2  1903               	skipnz
  2491  00D3  28D8               	goto	i1l2518
  2492  00D4  0879               	movf	_work_sta,w
  2493  00D5  3A05               	xorlw	5
  2494  00D6  1D03               	skipz
  2495  00D7  28FE               	goto	i1l850
  2496  00D8                     i1l2518:	
  2497                           
  2498                           ;MS86F_PWM1_HALF.C: 256: {
  2499                           ;MS86F_PWM1_HALF.C: 257: delay++;
  2500  00D8  0AC5               	incf	_delay,f	;volatile
  2501                           
  2502                           ;MS86F_PWM1_HALF.C: 258: if(work_sta==STATE_CHARGING)delay++;
  2503  00D9  0879               	movf	_work_sta,w
  2504  00DA  3A05               	xorlw	5
  2505  00DB  1D03               	skipz
  2506  00DC  28DF               	goto	i1l2524
  2507  00DD                     i1l2522:	
  2508  00DD  0AC5               	incf	_delay,f	;volatile
  2509  00DE  28E3               	goto	i1l2528
  2510  00DF                     i1l2524:	
  2511                           
  2512                           ;MS86F_PWM1_HALF.C: 259: else if(work_sta==STATE_WARNING)delay++;
  2513  00DF  0879               	movf	_work_sta,w
  2514  00E0  3A03               	xorlw	3
  2515  00E1  1903               	btfsc	3,2
  2516  00E2  28DD               	goto	i1l2522
  2517  00E3                     i1l2528:	
  2518                           
  2519                           ;MS86F_PWM1_HALF.C: 261: if(delay>LED_SPEED)
  2520  00E3  0845               	movf	_delay,w	;volatile
  2521  00E4  0248               	subwf	_LED_SPEED,w	;volatile
  2522  00E5  1803               	skipnc
  2523  00E6  28FE               	goto	i1l850
  2524                           
  2525                           ;MS86F_PWM1_HALF.C: 262: {
  2526                           ;MS86F_PWM1_HALF.C: 263: delay=0;
  2527  00E7  01C5               	clrf	_delay	;volatile
  2528                           
  2529                           ;MS86F_PWM1_HALF.C: 265: if(dir)
  2530  00E8  0849               	movf	_dir,w	;volatile
  2531  00E9  1903               	btfsc	3,2
  2532  00EA  28F3               	goto	i1l2540
  2533                           
  2534                           ;MS86F_PWM1_HALF.C: 266: {
  2535                           ;MS86F_PWM1_HALF.C: 267: if(brightness<200)brightness++;
  2536  00EB  30C8               	movlw	200
  2537  00EC  027A               	subwf	_brightness,w	;volatile
  2538  00ED  1803               	skipnc
  2539  00EE  28F1               	goto	i1l2538
  2540  00EF  0AFA               	incf	_brightness,f	;volatile
  2541  00F0  28FB               	goto	i1l2544
  2542  00F1                     i1l2538:	
  2543                           
  2544                           ;MS86F_PWM1_HALF.C: 268: else dir=0;
  2545  00F1  01C9               	clrf	_dir	;volatile
  2546  00F2  28FB               	goto	i1l2544
  2547  00F3                     i1l2540:	
  2548                           
  2549                           ;MS86F_PWM1_HALF.C: 270: else
  2550                           ;MS86F_PWM1_HALF.C: 271: {
  2551                           ;MS86F_PWM1_HALF.C: 272: if(brightness>5)brightness--;
  2552  00F3  3006               	movlw	6
  2553  00F4  027A               	subwf	_brightness,w	;volatile
  2554  00F5  1C03               	skipc
  2555  00F6  28F9               	goto	i1l848
  2556  00F7  03FA               	decf	_brightness,f	;volatile
  2557  00F8  28FB               	goto	i1l2544
  2558  00F9                     i1l848:	
  2559                           
  2560                           ;MS86F_PWM1_HALF.C: 273: else dir=1;
  2561  00F9  01C9               	clrf	_dir	;volatile
  2562  00FA  0AC9               	incf	_dir,f	;volatile
  2563  00FB                     i1l2544:	
  2564                           
  2565                           ;MS86F_PWM1_HALF.C: 274: }
  2566                           ;MS86F_PWM1_HALF.C: 284: P1BDTL = 200-brightness;
  2567  00FB  087A               	movf	_brightness,w	;volatile
  2568  00FC  3CC8               	sublw	200
  2569  00FD  008F               	movwf	15	;volatile
  2570  00FE                     i1l850:	
  2571  00FE  0871               	movf	??_ISR+1,w
  2572  00FF  008A               	movwf	10
  2573  0100  0E70               	swapf	??_ISR^(0+-128),w
  2574  0101  0083               	movwf	3
  2575  0102  0EFE               	swapf	126,f
  2576  0103  0E7E               	swapf	126,w
  2577  0104  0009               	retfie
  2578  0105                     __end_of_ISR:	
  2579                           
  2580                           	psect	intentry
  2581  0004                     __pintentry:	
  2582                           ; Regs used in _ISR: [wreg+status,2+status,0]
  2583                           
  2584  0004                     interrupt_function:	
  2585  007E                     saved_w	set	btemp
  2586  0004  00FE               	movwf	btemp
  2587  0005  0E03               	swapf	3,w
  2588  0006  00F0               	movwf	??_ISR
  2589  0007  080A               	movf	10,w
  2590  0008  00F1               	movwf	??_ISR+1
  2591  0009  28BC               	ljmp	_ISR
  2592                           
  2593                           	psect	text786
  2594  0000                     __ptext786:	
  2595 ;; =============== function _ISR ends ============
  2596                           
  2597  007E                     btemp	set	126	;btemp
  2598  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Sun Jun 21 18:52:44 2020

                         pc 0002                          fsr 0004         ??_DISABLE_INTERRUPT 0072  
                       _C1R 08CA                         _C2R 08D2                         l811 0000  
                       l820 0000                         l814 011E                         l823 020D  
                       l903 0000                         l831 0000                         l816 0123  
                       l817 0000                         l825 0000                         l862 0000  
                       l871 0000                         l856 0000                         l880 0000  
                       l865 0000                         l874 0000                         l859 0000  
                       l883 0000                         l868 0000                         l892 0000  
                       l877 0000                         l886 0000                         l895 0000  
                       l967 009F                         l889 0000                         _GIE 005F  
                       _PA2 002A                         _PA3 002B                         _PC0 0038  
                       _PA6 002E                         _PC4 003C                         _RA4 002C  
                       _RA7 002F                         _ISR 00BC                         _SR0 0CF6  
                       _SR1 0CF7                         _VR0 08C0                         _VR1 08C1  
                       _VR2 08C2         __end_of_GetKeyEvent 0143                         _VR3 08C3  
                       _VRR 08C5                         _dir 0049                        S3256 0214  
                      ?_ISR 0070                        l3000 016A                        l3002 0000  
                      l3010 0000                        l3004 0221                        l3012 0000  
                      l3020 0000                        l3006 0000                        l3014 0000  
                      l3022 0000                        l3030 0000                        l3110 002F  
                      l3102 0025                        _C1OE 08CD                        l3008 0000  
                      l3024 0000                        l3016 0000                        l3032 0000  
                      l3040 0000                        l3200 00A9                        l3112 0031  
                      l3104 0027                        l3018 0000                        l3034 0000  
                      l3026 0000                        l3050 0000                        l3042 0000  
                      l3114 0035                        _C2OE 08D5                        l3028 0000  
                      l3036 0000                        l3044 0000                        l3052 0000  
                      l3060 0000                        l3204 00B4                        l3140 0047  
                      l3132 0041                        l3124 003B                        l3116 0037  
                      l3108 002D                        l3038 0000                        l3046 0000  
                      l3054 0000                        l3062 0000                        l3070 0000  
                      l3206 00B7                        l3118 0039                        l3048 0000  
                      l3056 0000                        l3064 0000                        l3072 0000  
                      l3152 0051                        l3144 004A                        l3128 003E  
                      l3160 0060                        l3080 0000                        _C1ON 08CF  
                      l3066 0000                        l3058 0000                        l3074 0000  
                      l3170 0000                        l3090 0012                        l3082 0000  
                      l3068 0000                        l3172 0076                        l3092 0000  
                      l3084 0000                        l3076 0000                        _C2ON 08D7  
                      l3190 0000                        l3182 0086                        l3166 0000  
                      l3158 0055                        l3094 0000                        l3086 0000  
                      l3078 0000                        l3088 0000                        l3194 0097  
                      l3186 008C                        l3178 0080                        l2900 0000  
                      l3188 008E                        l2910 0000                        l2902 0000  
                      l2904 0000                        l2912 0000                        l2906 0000  
                      l2914 0000                        l2930 0000                        l2908 0000  
                      l2916 0000                        l2924 0000                        l2932 0000  
                      l2940 0000                        l2926 0000                        l2918 0000  
                      l2934 0000                        l2942 0000                        l2880 0000  
                      l2928 0000                        l2936 01BF                        l2952 0000  
                      l2944 0000                        l2882 0000                        l2874 0000  
                      l2890 0000                        l2938 0000                        l2962 0140  
                      l2946 0000                        l2884 0000                        l2876 0000  
                      l2892 0000                        l2964 0141                        l2956 0136  
                      l2886 0000                        l2878 0000                        l2894 0000  
                      l2896 0000                        l2888 0000                        l2968 0000  
                      l2992 0000                        l2898 0000                        l2994 0000  
                      l2998 0000                        _ANS0 08F0                        _ANS1 08F1  
                      _ANS2 08F2                        _ANS3 08F3                        _ANS4 08F4  
                      _ANS5 08F5                        _ANS6 08F6                        _ANS7 08F7  
                      _ANS8 08F8                        _ANS9 08F9                        _P1OE 0090  
                      _T0IE 005D                        _T0IF 005A                        _T0ON 00FB  
                      _IOCB 0116                        u1195 0170                        _INTE 005C  
                      _INTF 0059                        _PR2H 0092                        _PR2L 0091  
                      _PCON 008E                        _LVDW 0472                        _TMR0 0001  
                      _STRA 0CE8                        _STRB 0CE9                        _STRC 0CEA  
                      _STRD 0CEB                        _WREN 0C62                        _WPUA 0095  
                      _WPUB 0115                        _WPUC 0093                 main@keycode 004B  
 __end_of_DISABLE_INTERRUPT 022D                        _main 000B                        btemp 007E  
      __size_of_DELAY_125US 0008                        start 000A            __end_of_DELAY_MS 0177  
               main@pwr_sta 004A                       ??_ISR 0070                       _C1CH0 08C8  
                     _C1CH1 08C9                       _C2CH0 08D0                       _C2CH1 08D1  
                     _C1SEN 0CF5                       _C2REN 0CF4                       _C1POL 08CC  
                     _C2POL 08D4                       _C1OUT 08CE                       _C2OUT 08D6  
                     ?_main 0070                       _ANS10 08FA                       _ANS11 08FB  
                     _P1BOE 0486                       _P1CON 0016                       _EEPGD 0C67  
                     _ANSEL 011E                       _P1POL 0099                       _IOCB4 08B4  
                     _IOCB5 08B5                       _IOCB6 08B6                       _IOCB7 08B7  
                     _T1GSS 08D9                       i1l850 00FE                       i1l834 00C0  
                     i1l848 00F9                       _LVDEN 0473                       _MSCON 001B  
                     _VP6EN 08C4                       _TMR2H 0013                       _TMR2L 0011  
                     _PSRCA 0088                       _PSRCC 0094                       _PORTA 0005  
                     _PORTC 0007                       _SRCON 019E                       _PULSR 0CF2  
                     _PULSS 0CF3                       _TRISA 0085                       _TRISC 0087  
                     _VRCON 0118                       _WPUB4 08AC                       _WPUB5 08AD  
                     _WPUB6 08AE                       _WPUB7 08AF            __end_of_LVD_INIT 0231  
      __size_of_DEVICE_INIT 001C          __size_of_PWM1_INIT 0021             __end_of_led_off 0221  
                     _delay 0045            __end_of_WDT_INIT 01F2                       pclath 000A  
  __end_of_ENABLE_INTERRUPT 01E8                       status 0003                       wtemp0 007E  
              __end_of_main 00BC                 _GetKeyEvent 0126          __size_of_SYS_SLEEP 0012  
                    ??_main 0077          __size_of_GetPwrSta 0008                      _C1VREN 08C7  
                    _C2VREN 08C6                      _C2SYNC 08D8                      _EEADRH 010F  
                    _EEDATH 010E                      _P1BDTH 0015                      _P1BDTL 000F  
                    _ANSELH 011F                      _MC1OUT 08DF                      _MC2OUT 08DE  
                    _T2CON0 0012                      _T2CON1 009E                      i1l2520 0000  
                    i1l2504 0000                      i1l2522 00DD                      i1l2506 0000  
                    i1l2540 00F3                      i1l2532 0000                      i1l2524 00DF  
                    i1l2508 0000                      i1l2534 0000                      i1l2518 00D8  
                    i1l2544 00FB                      i1l2528 00E3                      i1l2538 00F1  
                    i1l2494 0000                      _INTEDG 040E                      _INTCON 000B  
__size_of_DISABLE_INTERRUPT 0006                      _OSCCON 008F                      _T0_cnt 0044  
                    _TMR2IF 0061                      _PSINKA 0097                      _PSINKC 009F  
                    _OPTION 0081                      _TMR2ON 0092                  _SetUvSleep 01CA  
                    _WDTCON 0018                      _SLVREN 00DB                      _SWDTEN 00C0  
                 DELAY_MS@a 0075           __end_of_PWM1_INIT 0126          __size_of_SetUvIdle 000B  
                    _led_on 0221                   ??_led_off 0072                __pdataCOMMON 0077  
                    saved_w 007E                   ?_DELAY_MS 0073           __end_of_SYS_SLEEP 019E  
             ?_SetUvCharged 0070           __end_of_GetPwrSta 020C                   ?_LVD_INIT 0070  
            __pcstackCOMMON 0070                __pidataBANK0 0000               ?_SetUvWarning 0070  
                 ?_WDT_INIT 0070               ?_SetUvWorking 0070                  ??_DELAY_MS 0075  
        __size_of_led_blink 000B           __end_of_SetUvIdle 01A9                  __pbssBANK0 0040  
            ??_SetUvCharged 0072                 ?_SetUvSleep 0070                  __pmaintext 000B  
                ??_LVD_INIT 0072              ??_SetUvWarning 0072                  __pintentry 0004  
                   ?_led_on 0070                     _CM1CON0 0119                     _CM2CON0 011A  
                   _CM2CON1 011B              ??_SetUvWorking 0072                  ??_WDT_INIT 0072  
    __size_of_SetUvCharging 0009      __size_of_SetUvBreaking 000B                  _brightness 007A  
                   _PSTRCON 019D                     _STRSYNC 0CEC               ??_DELAY_125US 0072  
         ?_ENABLE_INTERRUPT 0070          ??_ENABLE_INTERRUPT 0072           __end_of_led_blink 01CA  
              ?_GetKeyEvent 0070               _working_timer 0042             __size_of_led_on 0006  
             ??_DEVICE_INIT 0072                     _led_off 021B         __size_of_SetUvSleep 000A  
              __size_of_ISR 0049                     _keytime 007B                   _LED_SPEED 0048  
      end_of_initialization 018A                  _second_cnt 0047               _SetUvCharging 01FB  
             _SetUvBreaking 01A9         __end_of_DELAY_125US 0214                DELAY_125US@a 0072  
                 _PWM1_INIT 0105        __end_of_SetUvCharged 01FB         __end_of_DEVICE_INIT 015F  
         __size_of_DELAY_MS 0018        __end_of_SetUvWarning 01DE              ?_SetUvCharging 0070  
      __end_of_SetUvWorking 01BF              ?_SetUvBreaking 0070                DELAY_MS@Time 0073  
                 _SYS_SLEEP 018C                   _GetPwrSta 0204           __size_of_LVD_INIT 0004  
                ?_PWM1_INIT 0070               __pidataCOMMON 0000              __end_of_led_on 0227  
         __size_of_WDT_INIT 000A         start_initialization 0177                 __end_of_ISR 0105  
               _DELAY_125US 020C                ??_SetUvSleep 0072                  ?_SYS_SLEEP 0070  
                 _SetUvIdle 019E                  ?_GetPwrSta 0070                    ??_led_on 0072  
               __pdataBANK0 0048        __size_of_GetKeyEvent 001D                 _DEVICE_INIT 0143  
        __end_of_SetUvSleep 01D4                 __pbssCOMMON 007A               __pcstackBANK0 004A  
           ??_SetUvCharging 0072             ??_SetUvBreaking 0072                  ?_SetUvIdle 0070  
     __size_of_SetUvCharged 0009                   __ptext770 01B4                   __ptext771 021B  
                 __ptext780 01DE                   __ptext772 0221                   __ptext764 01CA  
                 __ptext781 020C                   __ptext773 018C                   __ptext765 019E  
                 __ptext782 01E8                   __ptext774 015F                   __ptext766 01F2  
                 __ptext783 0105                   __ptext775 0204                   __ptext767 01A9  
                 __ptext784 0143                   __ptext776 0126                   __ptext768 01FB  
                 __ptext785 00BC                   __ptext777 01BF                   __ptext769 01D4  
                 __ptext786 0000                   __ptext778 022D                   __ptext779 0227  
               ??_PWM1_INIT 0072   __size_of_ENABLE_INTERRUPT 000A                   _brigtness 0077  
                 _led_blink 01BF                   __pswtext1 0214                    ?_led_off 0070  
     __size_of_SetUvWarning 000A                    _DELAY_MS 015F       __size_of_SetUvWorking 000B  
         interrupt_function 0004                 ??_SYS_SLEEP 0072                _SetUvCharged 01F2  
                  _LVD_INIT 022D                 ??_GetPwrSta 0072                _SetUvWarning 01D4  
                  _WDT_INIT 01E8                  ?_led_blink 0070                _SetUvWorking 01B4  
               ??_SetUvIdle 0072            __size_of_led_off 0006                    _led_stat 0046  
      GetKeyEvent@key_event 0072                ?_DELAY_125US 0070               __size_of_main 00B1  
          _ENABLE_INTERRUPT 01DE                 ??_led_blink 0072                    _work_sta 0079  
              ?_DEVICE_INIT 0070                    intlevel1 0000               ??_GetKeyEvent 0072  
                _T0_seconds 0040       __end_of_SetUvCharging 0204       __end_of_SetUvBreaking 01B4  
         _DISABLE_INTERRUPT 0227          ?_DISABLE_INTERRUPT 0070  
